{"ast":null,"code":"import _regenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// frontend/src/composables/useShotGridData.js\nimport { ref } from 'vue';\nimport { fetchProjects, fetchShots, fetchVersionsForShot } from '../api'; // api.js에서 함수 임포트\n\nexport default function useShotGridData() {\n  var projectName = ref('');\n  var projects = ref([]);\n  var shots = ref([]);\n  var selectedShotName = ref('');\n  var versions = ref([]);\n\n  // 프로젝트 목록 불러오기\n  var loadProjects = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var projData, _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.p = 0;\n            _context.n = 1;\n            return fetchProjects();\n          case 1:\n            projData = _context.v;\n            projects.value = projData.projects || [];\n            _context.n = 3;\n            break;\n          case 2:\n            _context.p = 2;\n            _t = _context.v;\n            console.error('프로젝트 목록 불러오기 실패:', _t);\n          case 3:\n            return _context.a(2);\n        }\n      }, _callee, null, [[0, 2]]);\n    }));\n    return function loadProjects() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  // 프로젝트 선택 시 해당 프로젝트의 샷 목록을 불러오는 함수\n  var onProjectSelected = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var data, _t2;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            selectedShotName.value = ''; // 프로젝트 변경 시 샷 선택 초기화\n            versions.value = []; // 프로젝트 변경 시 버전 목록 초기화\n            if (!projectName.value) {\n              _context2.n = 5;\n              break;\n            }\n            _context2.p = 1;\n            _context2.n = 2;\n            return fetchShots(projectName.value);\n          case 2:\n            data = _context2.v;\n            shots.value = data.shots || [];\n            _context2.n = 4;\n            break;\n          case 3:\n            _context2.p = 3;\n            _t2 = _context2.v;\n            console.error('샷 목록 불러오기 실패:', _t2);\n            shots.value = [];\n          case 4:\n            _context2.n = 6;\n            break;\n          case 5:\n            shots.value = [];\n          case 6:\n            return _context2.a(2);\n        }\n      }, _callee2, null, [[1, 3]]);\n    }));\n    return function onProjectSelected() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // 외부에서 버전 목록을 로드할 수 있도록 노출 (App.vue에서 호출)\n  // 이 함수는 App.vue의 loadVersions 함수에서 호출될 예정이므로,\n  // 여기서는 버전 목록만 관리하고 노트 로딩은 useNotes에서 담당합니다.\n  var setVersions = function setVersions(newVersions) {\n    versions.value = newVersions;\n  };\n  return {\n    projectName: projectName,\n    projects: projects,\n    shots: shots,\n    selectedShotName: selectedShotName,\n    versions: versions,\n    loadProjects: loadProjects,\n    onProjectSelected: onProjectSelected,\n    setVersions: setVersions // 외부에서 버전 목록을 설정할 수 있도록 노출\n  };\n}","map":{"version":3,"names":["ref","fetchProjects","fetchShots","fetchVersionsForShot","useShotGridData","projectName","projects","shots","selectedShotName","versions","loadProjects","_ref","_asyncToGenerator","_regenerator","m","_callee","projData","_t","w","_context","n","p","v","value","console","error","a","apply","arguments","onProjectSelected","_ref2","_callee2","data","_t2","_context2","setVersions","newVersions"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/composables/useShotGridData.js"],"sourcesContent":["// frontend/src/composables/useShotGridData.js\nimport { ref } from 'vue';\nimport { fetchProjects, fetchShots, fetchVersionsForShot } from '../api'; // api.js에서 함수 임포트\n\nexport default function useShotGridData() {\n  const projectName = ref('');\n  const projects = ref([]);\n  const shots = ref([]);\n  const selectedShotName = ref('');\n  const versions = ref([]);\n\n  // 프로젝트 목록 불러오기\n  const loadProjects = async () => {\n    try {\n      const projData = await fetchProjects();\n      projects.value = projData.projects || [];\n    } catch (error) {\n      console.error('프로젝트 목록 불러오기 실패:', error);\n    }\n  };\n\n  // 프로젝트 선택 시 해당 프로젝트의 샷 목록을 불러오는 함수\n  const onProjectSelected = async () => {\n    selectedShotName.value = ''; // 프로젝트 변경 시 샷 선택 초기화\n    versions.value = []; // 프로젝트 변경 시 버전 목록 초기화\n    if (projectName.value) {\n      try {\n        const data = await fetchShots(projectName.value);\n        shots.value = data.shots || [];\n      } catch (error) {\n        console.error('샷 목록 불러오기 실패:', error);\n        shots.value = [];\n      }\n    } else {\n      shots.value = [];\n    }\n  };\n\n  // 외부에서 버전 목록을 로드할 수 있도록 노출 (App.vue에서 호출)\n  // 이 함수는 App.vue의 loadVersions 함수에서 호출될 예정이므로,\n  // 여기서는 버전 목록만 관리하고 노트 로딩은 useNotes에서 담당합니다.\n  const setVersions = (newVersions) => {\n    versions.value = newVersions;\n  };\n\n  return {\n    projectName,\n    projects,\n    shots,\n    selectedShotName,\n    versions,\n    loadProjects,\n    onProjectSelected,\n    setVersions, // 외부에서 버전 목록을 설정할 수 있도록 노출\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}