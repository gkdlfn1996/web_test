{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0,\n  \"class\": \"versions-section\"\n};\nvar _hoisted_2 = {\n  \"class\": \"note-section\"\n};\nvar _hoisted_3 = {\n  \"class\": \"my-note\"\n};\nvar _hoisted_4 = {\n  \"class\": \"other-notes\"\n};\nvar _hoisted_5 = {\n  \"class\": \"d-flex justify-space-between align-center px-2 pb-1\"\n};\nvar _hoisted_6 = {\n  \"class\": \"text-subtitle-2 text-grey-darken-1\"\n};\nvar _hoisted_7 = {\n  \"class\": \"text-caption text-right text-grey-darken-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_textarea = _resolveComponent(\"v-textarea\");\n  var _component_v_card_text = _resolveComponent(\"v-card-text\");\n  var _component_v_divider = _resolveComponent(\"v-divider\");\n  var _component_v_card = _resolveComponent(\"v-card\");\n  var _component_v_data_table = _resolveComponent(\"v-data-table\");\n  return $props.versions.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Version\", -1 /* CACHED */)), _createVNode(_component_v_data_table, {\n    headers: $setup.versionHeaders,\n    items: $props.versions,\n    \"item-key\": \"id\",\n    \"class\": \"elevation-1\",\n    \"hide-default-footer\": \"\",\n    \"disable-pagination\": \"\"\n  }, {\n    \"item.note\": _withCtx(function (_ref) {\n      var item = _ref.item;\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, \"My Draft Note (\" + _toDisplayString(item.code) + \")\", 1 /* TEXT */), _createVNode(_component_v_textarea, {\n        label: \"여기에 노트를 작성하세요\",\n        rows: \"3\",\n        modelValue: $setup.localNotesContent[item.id],\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return $setup.localNotesContent[item.id] = $event;\n        },\n        onInput: function onInput($event) {\n          return $setup.emit('input-note', item.id, $setup.localNotesContent[item.id]);\n        },\n        onBlur: function onBlur($event) {\n          return $setup.emit('save-note', item.id, $setup.localNotesContent[item.id]);\n        },\n        variant: \"outlined\",\n        \"class\": _normalizeClass({\n          'saving-note': !!$props.isSaving[item.id]\n        })\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\", \"onBlur\", \"class\"])]), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Others Draft Notes\", -1 /* CACHED */)), _createVNode(_component_v_card, {\n        variant: \"outlined\",\n        \"class\": \"notes-container\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [$props.notesComposable.otherNotes.value[item.id] && $props.notesComposable.otherNotes.value[item.id].length ? (_openBlock(true), _createElementBlock(_Fragment, {\n            key: 0\n          }, _renderList($props.notesComposable.otherNotes.value[item.id], function (note, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: note.id\n            }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(note.owner.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($setup.formatDateTime(note.updated_at)), 1 /* TEXT */)]), _createVNode(_component_v_card_text, {\n              \"class\": \"note-content text-body-2 pa-2\"\n            }, {\n              \"default\": _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(note.content), 1 /* TEXT */)];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), index < $props.notesComposable.otherNotes.value[item.id].length - 1 ? (_openBlock(), _createBlock(_component_v_divider, {\n              key: 0\n            })) : _createCommentVNode(\"v-if\", true)]);\n          }), 128 /* KEYED_FRAGMENT */)) : (_openBlock(), _createBlock(_component_v_card_text, {\n            key: 1\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[0] || (_cache[0] = [_createTextVNode(\" 다른 사용자의 노트가 없습니다. \")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [0]\n          }))];\n        }),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)])])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"items\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$props","versions","length","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_v_data_table","headers","$setup","versionHeaders","items","_withCtx","_ref","item","_hoisted_2","_hoisted_3","_toDisplayString","code","_component_v_textarea","label","rows","localNotesContent","id","$event","onInput","emit","onBlur","variant","_normalizeClass","isSaving","_hoisted_4","_component_v_card","notesComposable","otherNotes","value","_Fragment","key","_renderList","note","index","_hoisted_5","_hoisted_6","owner","username","_hoisted_7","formatDateTime","updated_at","_component_v_card_text","content","_createBlock","_component_v_divider","_cache"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/components/VersionTable.vue"],"sourcesContent":["<!-- frontend/src/components/VersionTable.vue -->\n<template>\n  <div class=\"versions-section\" v-if=\"versions.length\">\n    <h2>Version</h2>\n    <v-data-table\n      :headers=\"versionHeaders\"\n      :items=\"versions\"\n      item-key=\"id\"\n      class=\"elevation-1\"\n      hide-default-footer\n      disable-pagination\n    >\n      <template v-slot:item.note=\"{ item }\">\n        <div class=\"note-section\">\n          <div class=\"my-note\">\n            <h3>My Draft Note ({{ item.code }})</h3>\n            <v-textarea\n              label=\"여기에 노트를 작성하세요\"\n              rows=\"3\"\n              v-model=\"localNotesContent[item.id]\"\n              @input=\"emit('input-note', item.id, localNotesContent[item.id])\"\n              @blur=\"emit('save-note', item.id, localNotesContent[item.id])\"\n              variant=\"outlined\"\n              :class=\"{ 'saving-note': !!isSaving[item.id] }\"\n            ></v-textarea>\n          </div>\n          <div class=\"other-notes\">\n            <h3>Others Draft Notes</h3>\n            <v-card variant=\"outlined\" class=\"notes-container\">\n              <template v-if=\"notesComposable.otherNotes.value[item.id] && notesComposable.otherNotes.value[item.id].length\">\n                <div v-for=\"(note, index) in notesComposable.otherNotes.value[item.id]\" :key=\"note.id\">\n                  <div class=\"d-flex justify-space-between align-center px-2 pb-1\">\n                    <span class=\"text-subtitle-2 text-grey-darken-1\">{{ note.owner.username }}</span>\n                    <span class=\"text-caption text-right text-grey-darken-1\">{{ formatDateTime(note.updated_at) }}</span>\n                  </div>\n                  <v-card-text class=\"note-content text-body-2 pa-2\">\n                    {{ note.content }}\n                  </v-card-text>\n                  <v-divider v-if=\"index < notesComposable.otherNotes.value[item.id].length - 1\"></v-divider>\n                </div>\n              </template>\n              <v-card-text v-else>\n                다른 사용자의 노트가 없습니다.\n              </v-card-text>\n            </v-card>\n          </div>\n        </div>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  versions: Array,\n  notes: Object, // notesContent 객체 (초기값 및 외부 업데이트용)\n  notesComposable: Object, // notes composable 전체를 받음\n  isSaving: Object, // isSaving prop 타입을 Object로 변경\n});\n\nconst emit = defineEmits(['save-note', 'input-note']); // emit 이벤트 추가\n\nconst versionHeaders = [\n  { title: 'Version', key: 'code', sortable: false },\n  { title: 'Note', key: 'note', sortable: false },\n];\n\n// 로컬 노트 내용을 저장할 반응형 객체\nconst localNotesContent = ref({});\n\n// props.notes가 변경될 때 localNotesContent를 초기화\nwatch(() => props.notes, (newNotes) => {\n  localNotesContent.value = { ...newNotes };\n}, { immediate: true, deep: true });\n\n// 날짜 포맷팅 함수\nconst formatDateTime = (isoString) => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  // ko-KR 로케일을 사용하여 'YYYY. MM. DD. HH:mm:ss' 형식으로 변환\n  return date.toLocaleString('ko-KR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  }).replace(/\\.\\s/g, '.').slice(0, -1); // 마지막 '.' 제거\n};\n\n</script>\n\n<style scoped>\n/* v-textarea 컴포넌트에 saving-note 클래스가 있을 때, 내부의 v-field__field에 스타일 적용 */\n::v-deep .v-textarea.saving-note .v-field__field {\n  transition: background-color 0.5s ease-in-out; /* 트랜지션 시간 증가 */\n  background-color: #E0F2F7; /* 연한 파란색 배경 */\n}\n/* 저장 완료 후 원래 색상으로 돌아오도록 CSS 트랜지션 추가 */\n\n.notes-container {\n  height: 115px; /* v-textarea의 높이와 유사하게 설정 */\n  overflow-y: auto; /* 내용이 많아지면 스크롤바 표시 */\n}\n\n.note-content {\n  white-space: pre-wrap; /* 줄바꿈 및 공백 유지 */\n  word-wrap: break-word; /* 긴 단어가 영역을 벗어나지 않도록 줄바꿈 */\n  line-height: 1.4;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}