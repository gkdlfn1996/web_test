{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"d-flex align-center mb-4\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"table-container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"versions-table\"\n};\nvar _hoisted_4 = {\n  \"class\": \"note-section\"\n};\nvar _hoisted_5 = {\n  \"class\": \"my-note\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  var _component_v_btn = _resolveComponent(\"v-btn\");\n  var _component_v_textarea = _resolveComponent(\"v-textarea\");\n  var _component_v_container = _resolveComponent(\"v-container\");\n  var _component_v_main = _resolveComponent(\"v-main\");\n  var _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_v_main, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_v_container, null, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_autocomplete, {\n                modelValue: $setup.projectName,\n                \"onUpdate:modelValue\": [_cache[0] || (_cache[0] = function ($event) {\n                  return $setup.projectName = $event;\n                }), $setup.onProjectSelected],\n                label: \"Project\",\n                items: $setup.projects,\n                \"class\": \"mr-4\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onUpdate:modelValue\"]), _createVNode(_component_v_autocomplete, {\n                modelValue: $setup.selectedShotName,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.selectedShotName = $event;\n                }),\n                label: \"Shot\",\n                items: $setup.shots.map(function (s) {\n                  return s.code;\n                }),\n                disabled: !$setup.shots.length,\n                \"class\": \"mr-4\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"disabled\"]), _createVNode(_component_v_btn, {\n                onClick: $setup.loadVersions,\n                disabled: !$setup.selectedShotName\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[2] || (_cache[2] = [_createTextVNode(\"OK\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [2]\n              }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_v_btn, {\n                onClick: $setup.clear,\n                \"class\": \"ml-4\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[3] || (_cache[3] = [_createTextVNode(\"Clear\")]);\n                }),\n                _: 1 /* STABLE */,\n                __: [3]\n              }, 8 /* PROPS */, [\"onClick\"])]), _createCommentVNode(\" 버전 목록 테이블 \"), $setup.versions.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"버전 목록\", -1 /* CACHED */)), _createElementVNode(\"table\", _hoisted_3, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"버전 이름\"), _createElementVNode(\"th\", null, \"노트\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.versions, function (version) {\n                return _openBlock(), _createElementBlock(\"tr\", {\n                  key: version.id\n                }, [_createElementVNode(\"td\", null, _toDisplayString(version.code), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, \"나의 임시 노트 (\" + _toDisplayString(version.code) + \")\", 1 /* TEXT */), _createVNode(_component_v_textarea, {\n                  label: \"여기에 노트를 작성하세요\",\n                  rows: \"3\",\n                  variant: \"outlined\"\n                })]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n                  \"class\": \"other-notes\"\n                }, [_createElementVNode(\"h3\", null, \"다른 사람의 임시 노트\"), _createElementVNode(\"p\", null, \"다른 사람의 노트 내용이 여기에 실시간으로 표시됩니다.\")], -1 /* CACHED */))])])]);\n              }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","_createVNode","_component_v_main","_component_v_container","_createElementVNode","_hoisted_1","_component_v_autocomplete","$setup","projectName","$event","onProjectSelected","label","items","projects","selectedShotName","shots","map","s","code","disabled","length","_component_v_btn","onClick","loadVersions","_cache","clear","_createCommentVNode","versions","_createElementBlock","_hoisted_2","_hoisted_3","_Fragment","_renderList","version","key","id","_toDisplayString","_hoisted_4","_hoisted_5","_component_v_textarea","rows","variant"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <div class=\"d-flex align-center mb-4\">\n          <v-autocomplete\n            v-model=\"projectName\"\n            label=\"Project\"\n            :items=\"projects\"\n            @update:modelValue=\"onProjectSelected\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-autocomplete\n            v-model=\"selectedShotName\"\n            label=\"Shot\"\n            :items=\"shots.map(s => s.code)\"\n            :disabled=\"!shots.length\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-btn @click=\"loadVersions\" :disabled=\"!selectedShotName\">OK</v-btn>\n          <v-btn @click=\"clear\" class=\"ml-4\">Clear</v-btn>\n        </div>\n\n        <!-- 버전 목록 테이블 -->\n        <div class=\"table-container\" v-if=\"versions.length\">\n          <h2>버전 목록</h2>\n          <table class=\"versions-table\">\n            <thead>\n              <tr>\n                <th>버전 이름</th>\n                <th>노트</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"version in versions\" :key=\"version.id\">\n                <td>{{ version.code }}</td>\n                <td>\n                  <div class=\"note-section\">\n                    <div class=\"my-note\">\n                      <h3>나의 임시 노트 ({{ version.code }})</h3>\n                      <v-textarea\n                        label=\"여기에 노트를 작성하세요\"\n                        rows=\"3\"\n                        variant=\"outlined\"\n                      ></v-textarea>\n                    </div>\n                    <div class=\"other-notes\">\n                      <h3>다른 사람의 임시 노트</h3>\n                      <p>다른 사람의 노트 내용이 여기에 실시간으로 표시됩니다.</p>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { fetchShots, fetchProjects, fetchVersionsForShot } from './api'\nimport axios from 'axios'; // axios 임포트 추가\n\nexport default {\n  setup() {\n    const projectName = ref('')\n    const projects = ref([])\n    const shots = ref([]) // 선택된 프로젝트의 샷 목록 (autocomplete items)\n    const versions = ref([]) // 버전 목록을 저장할 ref 추가\n    const selectedShotName = ref('') // 선택된 샷 이름\n\n    // DB 테스트 관련 변수 추가\n    const dbTestResult = ref(null);\n    const dbTestError = ref(null);\n\n  onMounted(\n      async () => {\n        const projData = await fetchProjects()\n        projects.value = projData.projects || []\n    })\n\n    // 프로젝트 선택 시 해당 프로젝트의 샷 목록을 불러오는 함수\n    async function onProjectSelected() {\n      selectedShotName.value = ''; // 프로젝트 변경 시 샷 선택 초기화\n      versions.value = []; // 프로젝트 변경 시 버전 목록 초기화\n      if (projectName.value) {\n        const data = await fetchShots(projectName.value);\n        shots.value = data.shots || [];\n      } else {\n        shots.value = [];\n      }\n    }\n\n    // 선택된 샷의 버전 목록을 불러오는 함수\n    async function loadVersions() {\n      const selectedShot = shots.value.find(s => s.code === selectedShotName.value);\n      if (selectedShot) {\n        const data = await fetchVersionsForShot(selectedShot.id);\n        versions.value = data.versions || [];\n      }\n    }\n\n    function clear() {\n      projectName.value = ''\n      shots.value = []\n      versions.value = [] // 버전 목록도 초기화\n      selectedShotName.value = '' // 선택된 샷 이름도 초기화\n    }\n\n    // DB 연결 테스트 메서드 추가\n    async function testDbConnection() {\n      dbTestResult.value = null;\n      dbTestError.value = null;\n      try {\n        const response = await axios.get('http://localhost:8001/db-test');\n        dbTestResult.value = response.data.message;\n      } catch (error) {\n        console.error('DB 연결 테스트 중 에러 발생:', error);\n        dbTestError.value = error.message;\n        if (error.response && error.response.data && error.response.data.message) {\n          dbTestError.value = error.response.data.message;\n        }\n      }\n    }\n\n    return {\n      projectName,\n      projects,\n      shots,\n      selectedShotName, // 반환 객체에 추가\n      versions, // 반환 객체에 추가\n      onProjectSelected, // 반환 객체에 추가\n      loadVersions, // 반환 객체에 추가\n      clear,\n      dbTestResult, // 반환 객체에 추가\n      dbTestError,  // 반환 객체에 추가\n      testDbConnection // 반환 객체에 추가\n    }\n  }\n}\n</script>\n\n<style src=\"./assets/styles.css\"></style>"],"mappings":";;;;;;EAIa,SAAM;AAA0B;;;EAoBhC,SAAM;;;EAEF,SAAM;AAAgB;;EAWhB,SAAM;AAAc;;EAClB,SAAM;AAAS;;;;;;;;uBArCtCA,YAAA,CAyDQC,gBAAA;wBAxDN;MAAA,OAuDS,CAvDTC,YAAA,CAuDSC,iBAAA;4BAtDP;UAAA,OAqDc,CArDdD,YAAA,CAqDcE,sBAAA;gCApDZ;cAAA,OAiBM,CAjBNC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJJ,YAAA,CAMkBK,yBAAA;4BALPC,MAAA,CAAAC,WAAW;;yBAAXD,MAAA,CAAAC,WAAW,GAAAC,MAAA;gBAAA,IAGAF,MAAA,CAAAG,iBAAiB,C;gBAFrCC,KAAK,EAAC,SAAS;gBACdC,KAAK,EAAEL,MAAA,CAAAM,QAAQ;gBAEhB,SAAM;uFAERZ,YAAA,CAMkBK,yBAAA;4BALPC,MAAA,CAAAO,gBAAgB;;yBAAhBP,MAAA,CAAAO,gBAAgB,GAAAL,MAAA;gBAAA;gBACzBE,KAAK,EAAC,MAAM;gBACXC,KAAK,EAAEL,MAAA,CAAAQ,KAAK,CAACC,GAAG,CAAC,UAAAC,CAAC;kBAAA,OAAIA,CAAC,CAACC,IAAI;gBAAA;gBAC5BC,QAAQ,GAAGZ,MAAA,CAAAQ,KAAK,CAACK,MAAM;gBACxB,SAAM;4EAERnB,YAAA,CAAqEoB,gBAAA;gBAA7DC,OAAK,EAAEf,MAAA,CAAAgB,YAAY;gBAAGJ,QAAQ,GAAGZ,MAAA,CAAAO;;oCAAkB;kBAAA,OAAEU,MAAA,QAAAA,MAAA,O,iBAAF,IAAE,E;;;;0DAC7DvB,YAAA,CAAgDoB,gBAAA;gBAAxCC,OAAK,EAAEf,MAAA,CAAAkB,KAAK;gBAAE,SAAM;;oCAAO;kBAAA,OAAKD,MAAA,QAAAA,MAAA,O,iBAAL,OAAK,E;;;;gDAG1CE,mBAAA,eAAkB,EACiBnB,MAAA,CAAAoB,QAAQ,CAACP,MAAM,I,cAAlDQ,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJzB,mBAAA,CAAc,YAAV,OAAK,qBACTA,mBAAA,CA4BQ,SA5BR0B,UA4BQ,G,0BA3BN1B,mBAAA,CAKQ,gBAJNA,mBAAA,CAGK,aAFHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,E,uBAGVA,mBAAA,CAoBQ,iB,kBAnBNwB,mBAAA,CAkBKG,SAAA,QAAAC,WAAA,CAlBiBzB,MAAA,CAAAoB,QAAQ,YAAnBM,OAAO;qCAAlBL,mBAAA,CAkBK;kBAlB4BM,GAAG,EAAED,OAAO,CAACE;oBAC5C/B,mBAAA,CAA2B,YAAAgC,gBAAA,CAApBH,OAAO,CAACf,IAAI,kBACnBd,mBAAA,CAeK,aAdHA,mBAAA,CAaM,OAbNiC,UAaM,GAZJjC,mBAAA,CAOM,OAPNkC,UAOM,GANJlC,mBAAA,CAAsC,YAAlC,YAAU,GAAAgC,gBAAA,CAAGH,OAAO,CAACf,IAAI,IAAG,GAAC,iBACjCjB,YAAA,CAIcsC,qBAAA;kBAHZ5B,KAAK,EAAC,eAAe;kBACrB6B,IAAI,EAAC,GAAG;kBACRC,OAAO,EAAC;gDAGZrC,mBAAA,CAGM;kBAHD,SAAM;gBAAa,IACtBA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAqC,WAAlC,gCAA8B,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}