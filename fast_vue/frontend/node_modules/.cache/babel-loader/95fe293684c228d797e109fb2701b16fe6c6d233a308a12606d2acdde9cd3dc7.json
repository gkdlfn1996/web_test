{"ast":null,"code":"import { resolveComponent as _resolveComponent, withKeys as _withKeys, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  \"class\": \"input-row\"\n};\nvar _hoisted_3 = {\n  \"class\": \"table-container\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"shots-table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  var _component_v_btn = _resolveComponent(\"v-btn\");\n  var _component_v_main = _resolveComponent(\"v-main\");\n  var _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_v_main, null, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_autocomplete, {\n            modelValue: _ctx.projectName,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return _ctx.projectName = $event;\n            }),\n            label: \"Project\",\n            items: _ctx.projects,\n            onKeyup: _withKeys(_ctx.loadShots, [\"enter\"])\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"onKeyup\"]), _createVNode(_component_v_btn, {\n            onClick: _ctx.loadShots\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[1] || (_cache[1] = [_createTextVNode(\"OK\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [1]\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n            onClick: _ctx.clear\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[2] || (_cache[2] = [_createTextVNode(\"Clear\")]);\n            }),\n            _: 1 /* STABLE */,\n            __: [2]\n          }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_3, [_ctx.shots.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Shot\"), _createElementVNode(\"th\", null, \"Task\"), _createElementVNode(\"th\", null, \"Cut In\"), _createElementVNode(\"th\", null, \"Cut Out\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.shots, function (shot) {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: shot.id\n            }, [_createElementVNode(\"td\", null, _toDisplayString(shot.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(shot.sg_task), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(shot.sg_cut_in), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(shot.sg_cut_out), 1 /* TEXT */)]);\n          }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" DB 연결 테스트 섹션 추가\\n        <v-divider class=\\\"my-5\\\"></v-divider>\\n        <v-container>\\n          <h2>DB 연결 테스트</h2>\\n          <v-btn @click=\\\"testDbConnection\\\">DB 연결 테스트 실행</v-btn>\\n          <p v-if=\\\"dbTestResult\\\">결과: {{ dbTestResult }}</p>\\n          <p v-if=\\\"dbTestError\\\" style=\\\"color: red;\\\">에러: {{ dbTestError }}</p>\\n        </v-container>\\n        DB 연결 테스트 섹션 끝 \")])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["id","_createBlock","_component_v_app","_createVNode","_component_v_main","_createElementVNode","_hoisted_1","_hoisted_2","_component_v_autocomplete","_ctx","projectName","$event","label","items","projects","onKeyup","_withKeys","loadShots","_component_v_btn","onClick","_cache","clear","_hoisted_3","shots","length","_createElementBlock","_hoisted_4","_Fragment","_renderList","shot","key","_toDisplayString","code","sg_task","sg_cut_in","sg_cut_out","_createCommentVNode"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <div id=\"app\">\n        <div class=\"input-row\">\n          <v-autocomplete\n            v-model=\"projectName\"\n            label=\"Project\"\n            :items=\"projects\"\n            @keyup.enter=\"loadShots\"\n          ></v-autocomplete>\n          <v-btn @click=\"loadShots\">OK</v-btn>\n          <v-btn @click=\"clear\">Clear</v-btn>\n        </div>\n        <div class=\"table-container\">\n          <table v-if=\"shots.length\" class=\"shots-table\">\n            <thead>\n              <tr>\n                <th>Shot</th>\n                <th>Task</th>\n                <th>Cut In</th>\n                <th>Cut Out</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"shot in shots\" :key=\"shot.id\">\n                <td>{{ shot.code }}</td>\n                <td>{{ shot.sg_task }}</td>\n                <td>{{ shot.sg_cut_in }}</td>\n                <td>{{ shot.sg_cut_out }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- DB 연결 테스트 섹션 추가\n        <v-divider class=\"my-5\"></v-divider>\n        <v-container>\n          <h2>DB 연결 테스트</h2>\n          <v-btn @click=\"testDbConnection\">DB 연결 테스트 실행</v-btn>\n          <p v-if=\"dbTestResult\">결과: {{ dbTestResult }}</p>\n          <p v-if=\"dbTestError\" style=\"color: red;\">에러: {{ dbTestError }}</p>\n        </v-container>\n        DB 연결 테스트 섹션 끝 -->\n\n      </div>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { fetchShots, fetchProjects } from './api'\nimport axios from 'axios'; // axios 임포트 추가\n\nexport default {\n  setup() {\n    const projectName = ref('')\n    const projects = ref([])\n    const shots = ref([])\n\n    // DB 테스트 관련 변수 추가\n    const dbTestResult = ref(null);\n    dbTestError.ref(null);\n\n  onMounted(\n      async () => {\n        const projData = await fetchProjects()\n        projects.value = projData.projects || []\n    })\n\n    async function loadShots() {\n      const data = await fetchShots(projectName.value)\n      shots.value = data.shots || []\n    }\n\n    function clear() {\n      projectName.value = ''\n      shots.value = []\n    }\n\n    // // DB 연결 테스트 메서드 추가\n    // async function testDbConnection() {\n    //   dbTestResult.value = null;\n    //   dbTestError.value = null;\n    //   try {\n    //     const response = await axios.get('http://localhost:8001/db-test');\n    //     dbTestResult.value = response.data.message;\n    //   } catch (error) {\n    //     console.error('DB 연결 테스트 중 에러 발생:', error);\n    //     dbTestError.value = error.message;\n    //     if (error.response && error.response.data && error.response.data.message) {\n    //       dbTestError.value = error.response.data.message;\n    //     }\n    //   }\n    // }\n\n    // return {\n    //   projectName,\n    //   projects,\n    //   shots,\n    //   loadShots,\n    //   clear,\n    //   dbTestResult, // 반환 객체에 추가\n    //   dbTestError,  // 반환 객체에 추가\n    //   testDbConnection // 반환 객체에 추가\n    // }\n  }\n}\n</script>\n\n<style src=\"./assets/styles.css\"></style>"],"mappings":";;EAGWA,EAAE,EAAC;AAAK;;EACN,SAAM;AAAW;;EAUjB,SAAM;AAAiB;;;EACC,SAAM;;;;;;;uBAdzCC,YAAA,CA8CQC,gBAAA;wBA7CN;MAAA,OA4CS,CA5CTC,YAAA,CA4CSC,iBAAA;4BA3CP;UAAA,OA0CM,CA1CNC,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJD,mBAAA,CASM,OATNE,UASM,GARJJ,YAAA,CAKkBK,yBAAA;wBAJPC,IAAA,CAAAC,WAAW;;qBAAXD,IAAA,CAAAC,WAAW,GAAAC,MAAA;YAAA;YACpBC,KAAK,EAAC,SAAS;YACdC,KAAK,EAAEJ,IAAA,CAAAK,QAAQ;YACfC,OAAK,EAAAC,SAAA,CAAQP,IAAA,CAAAQ,SAAS;uEAEzBd,YAAA,CAAoCe,gBAAA;YAA5BC,OAAK,EAAEV,IAAA,CAAAQ;UAAS;gCAAE;cAAA,OAAEG,MAAA,QAAAA,MAAA,O,iBAAF,IAAE,E;;;;0CAC5BjB,YAAA,CAAmCe,gBAAA;YAA3BC,OAAK,EAAEV,IAAA,CAAAY;UAAK;gCAAE;cAAA,OAAKD,MAAA,QAAAA,MAAA,O,iBAAL,OAAK,E;;;;4CAE7Bf,mBAAA,CAmBM,OAnBNiB,UAmBM,GAlBSb,IAAA,CAAAc,KAAK,CAACC,MAAM,I,cAAzBC,mBAAA,CAiBQ,SAjBRC,UAiBQ,G,0BAhBNrB,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAgB,YAAZ,SAAO,E,uBAGfA,mBAAA,CAOQ,iB,kBANNoB,mBAAA,CAKKE,SAAA,QAAAC,WAAA,CALcnB,IAAA,CAAAc,KAAK,YAAbM,IAAI;iCAAfJ,mBAAA,CAKK;cALsBK,GAAG,EAAED,IAAI,CAAC7B;gBACnCK,mBAAA,CAAwB,YAAA0B,gBAAA,CAAjBF,IAAI,CAACG,IAAI,kBAChB3B,mBAAA,CAA2B,YAAA0B,gBAAA,CAApBF,IAAI,CAACI,OAAO,kBACnB5B,mBAAA,CAA6B,YAAA0B,gBAAA,CAAtBF,IAAI,CAACK,SAAS,kBACrB7B,mBAAA,CAA8B,YAAA0B,gBAAA,CAAvBF,IAAI,CAACM,UAAU,iB;qFAM9BC,mBAAA,+XAQkB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}