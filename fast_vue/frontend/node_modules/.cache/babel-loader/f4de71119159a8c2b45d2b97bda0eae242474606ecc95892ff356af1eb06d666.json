{"ast":null,"code":"import _regenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { onMounted } from 'vue';\nimport useAuth from './composables/useAuth';\nimport useShotGridData from './composables/useShotGridData';\nimport useNotes from './composables/useNotes';\nimport { fetchVersionsForShot } from './api'; // fetchVersionsForShot는 loadVersions에서 직접 사용되므로 남겨둡니다.\n\nexport default {\n  setup: function setup() {\n    var auth = useAuth();\n    var shotGridData = useShotGridData();\n    var notes = useNotes(auth.loggedInUserId);\n\n    // App.vue의 onMounted 로직\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var storedUser, user;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            storedUser = sessionStorage.getItem('loggedInUser');\n            if (storedUser) {\n              user = JSON.parse(storedUser);\n              auth.loggedInUser.value = user.name;\n              auth.loggedInUserId.value = user.id;\n            }\n            _context.n = 1;\n            return shotGridData.loadProjects();\n          case 1:\n            return _context.a(2);\n        }\n      }, _callee);\n    })));\n\n    // loadVersions 함수는 App.vue에서 직접 관리 (ShotGridData와 Notes를 연결)\n    var loadVersions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var selectedShot, versionData, loadedVersions, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              selectedShot = shotGridData.shots.value.find(function (s) {\n                return s.code === shotGridData.selectedShotName.value;\n              });\n              if (selectedShot) {\n                _context2.n = 1;\n                break;\n              }\n              return _context2.a(2);\n            case 1:\n              _context2.n = 2;\n              return fetchVersionsForShot(selectedShot.id);\n            case 2:\n              versionData = _context2.v;\n              loadedVersions = versionData.versions || []; // useNotes의 loadVersionNotes 함수를 호출하여 노트 데이터 로딩\n              _context2.n = 3;\n              return notes.loadVersionNotes(loadedVersions);\n            case 3:\n              // 모든 데이터가 준비되면 버전 목록 업데이트 (UI 렌더링 유발)\n              shotGridData.setVersions(loadedVersions);\n              _context2.n = 5;\n              break;\n            case 4:\n              _context2.p = 4;\n              _t = _context2.v;\n              console.error(\"Error loading versions and notes:\", _t);\n              // 사용자에게 에러를 알리는 로직을 추가할 수 있습니다.\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 4]]);\n      }));\n      return function loadVersions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Clear 함수 (App.vue에서 직접 관리)\n    var clear = function clear() {\n      shotGridData.projectName.value = '';\n      shotGridData.shots.value = [];\n      shotGridData.versions.value = [];\n      shotGridData.selectedShotName.value = '';\n      auth.loginError.value = null;\n      notes.notesContent.value = {}; // 노트 내용도 초기화\n    };\n\n    // v-data-table을 위한 헤더 정의 (App.vue에서 직접 관리)\n    var versionHeaders = [{\n      title: 'Version',\n      key: 'code',\n      sortable: false\n    }, {\n      title: 'Note',\n      key: 'note',\n      sortable: false\n    }];\n    return {\n      // useAuth에서 노출된 속성/함수\n      username: auth.username,\n      password: auth.password,\n      loggedInUser: auth.loggedInUser,\n      loggedInUserId: auth.loggedInUserId,\n      loginError: auth.loginError,\n      login: auth.login,\n      // useShotGridData에서 노출된 속성/함수\n      projectName: shotGridData.projectName,\n      projects: shotGridData.projects,\n      shots: shotGridData.shots,\n      selectedShotName: shotGridData.selectedShotName,\n      versions: shotGridData.versions,\n      onProjectSelected: shotGridData.onProjectSelected,\n      // useNotes에서 노출된 속성/함수\n      notesContent: notes.notesContent,\n      saveNote: notes.saveNote,\n      // App.vue에서 직접 관리하는 속성/함수\n      loadVersions: loadVersions,\n      clear: clear,\n      versionHeaders: versionHeaders\n      // dbTest 관련은 현재 사용되지 않으므로 제거하거나 필요시 다시 추가\n    };\n  }\n};","map":{"version":3,"names":["onMounted","useAuth","useShotGridData","useNotes","fetchVersionsForShot","setup","auth","shotGridData","notes","loggedInUserId","_asyncToGenerator","_regenerator","m","_callee","storedUser","user","w","_context","n","sessionStorage","getItem","JSON","parse","loggedInUser","value","name","id","loadProjects","a","loadVersions","_ref2","_callee2","selectedShot","versionData","loadedVersions","_t","_context2","p","shots","find","s","code","selectedShotName","v","versions","loadVersionNotes","setVersions","console","error","apply","arguments","clear","projectName","loginError","notesContent","versionHeaders","title","key","sortable","username","password","login","projects","onProjectSelected","saveNote"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <!-- 로그인 섹션 -->\n      <v-container class=\"login-section\">\n        <v-card class=\"pa-5\" elevation=\"2\" v-if=\"!loggedInUser\">\n          <v-card-title class=\"text-h5\">로그인</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"username\"\n              label=\"ShotGrid ID\"\n              required\n            ></v-text-field>\n            <v-text-field\n              v-model=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              @keyup.enter=\"login\"\n              required\n            ></v-text-field>\n            <v-alert\n              v-if=\"loginError\"\n              type=\"error\"\n              dense\n              text\n              class=\"mb-3\"\n            >{{ loginError }}</v-alert>\n            <v-btn color=\"primary\" @click=\"login\">로그인</v-btn>\n          </v-card-text>\n        </v-card>\n        <v-alert v-else type=\"success\" dense text class=\"mb-5\">\n          <span>환영합니다, {{ loggedInUser }}!</span>\n        </v-alert>\n      </v-container>\n\n      <!-- 기존 UI 섹션 (로그인 성공 시 표시) -->\n      <v-container fluid v-if=\"loggedInUser\" :class=\"{'mt-5': loggedInUser}\">\n        <div class=\"d-flex align-center mb-4\">\n          <v-autocomplete\n            v-model=\"projectName\"\n            label=\"Project\"\n            :items=\"projects\"\n            @update:modelValue=\"onProjectSelected\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-autocomplete\n            v-model=\"selectedShotName\"\n            label=\"Shot\"\n            :items=\"shots.map(s => s.code)\"\n            :disabled=\"!shots.length\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-btn @click=\"loadVersions\" :disabled=\"!selectedShotName\">OK</v-btn>\n          <v-btn @click=\"clear\" class=\"ml-4\">Clear</v-btn>\n        </div>\n\n        <!-- 버전 목록 테이블 -->\n        <div class=\"versions-section\" v-if=\"versions.length\">\n          <h2>Version</h2>\n          <v-data-table\n            :headers=\"versionHeaders\"\n            :items=\"versions\"\n            item-key=\"id\"\n            class=\"elevation-1\"\n            hide-default-footer\n            disable-pagination\n          >\n            <template v-slot:item.note=\"{ item }\">\n              <div class=\"note-section\">\n                <div class=\"my-note\">\n                  <h3>My Draft Note ({{ item.code }})</h3>\n                  <v-textarea\n                    label=\"여기에 노트를 작성하세요\"\n                    rows=\"3\"\n                    v-model=\"notesContent[item.id]\"\n                    @input=\"saveNote(item.id, notesContent[item.id])\"\n                    variant=\"outlined\"\n                  ></v-textarea>\n                </div>\n                <div class=\"other-notes\">\n                  <h3>Others Draft Notes</h3>\n                  <p>다른 사람의 노트 내용이 여기에 실시간으로 표시됩니다.</p>\n                </div>\n              </div>\n            </template>\n          </v-data-table>\n        </div>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport useAuth from './composables/useAuth';\nimport useShotGridData from './composables/useShotGridData';\nimport useNotes from './composables/useNotes';\nimport { fetchVersionsForShot } from './api'; // fetchVersionsForShot는 loadVersions에서 직접 사용되므로 남겨둡니다.\n\nexport default {\n  setup() {\n    const auth = useAuth();\n    const shotGridData = useShotGridData();\n    const notes = useNotes(auth.loggedInUserId);\n\n    // App.vue의 onMounted 로직\n    onMounted(async () => {\n      const storedUser = sessionStorage.getItem('loggedInUser');\n      if (storedUser) {\n        const user = JSON.parse(storedUser);\n        auth.loggedInUser.value = user.name;\n        auth.loggedInUserId.value = user.id;\n      }\n      await shotGridData.loadProjects();\n    });\n\n    // loadVersions 함수는 App.vue에서 직접 관리 (ShotGridData와 Notes를 연결)\n    const loadVersions = async () => {\n      try {\n        const selectedShot = shotGridData.shots.value.find(s => s.code === shotGridData.selectedShotName.value);\n        if (!selectedShot) return;\n\n        const versionData = await fetchVersionsForShot(selectedShot.id);\n        const loadedVersions = versionData.versions || [];\n\n        // useNotes의 loadVersionNotes 함수를 호출하여 노트 데이터 로딩\n        await notes.loadVersionNotes(loadedVersions);\n\n        // 모든 데이터가 준비되면 버전 목록 업데이트 (UI 렌더링 유발)\n        shotGridData.setVersions(loadedVersions);\n\n      } catch (error) {\n        console.error(\"Error loading versions and notes:\", error);\n        // 사용자에게 에러를 알리는 로직을 추가할 수 있습니다.\n      }\n    };\n\n    // Clear 함수 (App.vue에서 직접 관리)\n    const clear = () => {\n      shotGridData.projectName.value = '';\n      shotGridData.shots.value = [];\n      shotGridData.versions.value = [];\n      shotGridData.selectedShotName.value = '';\n      auth.loginError.value = null;\n      notes.notesContent.value = {}; // 노트 내용도 초기화\n    };\n\n    // v-data-table을 위한 헤더 정의 (App.vue에서 직접 관리)\n    const versionHeaders = [\n      { title: 'Version', key: 'code', sortable: false },\n      { title: 'Note', key: 'note', sortable: false },\n    ];\n\n    return {\n      // useAuth에서 노출된 속성/함수\n      username: auth.username,\n      password: auth.password,\n      loggedInUser: auth.loggedInUser,\n      loggedInUserId: auth.loggedInUserId,\n      loginError: auth.loginError,\n      login: auth.login,\n\n      // useShotGridData에서 노출된 속성/함수\n      projectName: shotGridData.projectName,\n      projects: shotGridData.projects,\n      shots: shotGridData.shots,\n      selectedShotName: shotGridData.selectedShotName,\n      versions: shotGridData.versions,\n      onProjectSelected: shotGridData.onProjectSelected,\n\n      // useNotes에서 노출된 속성/함수\n      notesContent: notes.notesContent,\n      saveNote: notes.saveNote,\n\n      // App.vue에서 직접 관리하는 속성/함수\n      loadVersions,\n      clear,\n      versionHeaders,\n      // dbTest 관련은 현재 사용되지 않으므로 제거하거나 필요시 다시 추가\n    };\n  },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}