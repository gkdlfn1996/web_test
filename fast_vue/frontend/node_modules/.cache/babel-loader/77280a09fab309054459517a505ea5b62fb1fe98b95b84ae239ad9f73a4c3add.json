{"ast":null,"code":"import _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref, watch } from 'vue';\nexport default {\n  __name: 'VersionTable',\n  props: {\n    versions: Array,\n    notes: Object,\n    // notesContent 객체 (초기값 및 외부 업데이트용)\n    notesComposable: Object,\n    // notes composable 전체를 받음\n    isSaving: Object // isSaving prop 타입을 Object로 변경\n  },\n  emits: ['save-note', 'input-note'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n    var emit = __emit; // emit 이벤트 추가\n\n    var versionHeaders = [{\n      title: 'Version',\n      key: 'code',\n      sortable: false\n    }, {\n      title: 'Note',\n      key: 'note',\n      sortable: false\n    }];\n\n    // 로컬 노트 내용을 저장할 반응형 객체\n    var localNotesContent = ref({});\n\n    // props.notes가 변경될 때 localNotesContent를 초기화\n    watch(function () {\n      return props.notes;\n    }, function (newNotes) {\n      localNotesContent.value = _objectSpread({}, newNotes);\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // isSaving prop을 감시하여 콘솔에 출력 (디버깅용)\n    watch(function () {\n      return props.isSaving;\n    }, function (newIsSaving) {\n      console.log('VersionTable received isSaving:', JSON.stringify(newIsSaving));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var handleInput = function handleInput(versionId, value) {\n      localNotesContent.value[versionId] = value;\n      emit('input-note', versionId, value);\n    };\n    var handleBlur = function handleBlur(versionId) {\n      // 현재 로컬 컨텐츠를 가지고 save-note 이벤트를 발생시킨다.\n      emit('save-note', versionId, localNotesContent.value[versionId]);\n    };\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      versionHeaders: versionHeaders,\n      localNotesContent: localNotesContent,\n      handleInput: handleInput,\n      handleBlur: handleBlur,\n      ref: ref,\n      watch: watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","versionHeaders","title","key","sortable","localNotesContent","notes","newNotes","value","_objectSpread","immediate","deep","isSaving","newIsSaving","console","log","JSON","stringify","handleInput","versionId","handleBlur"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/components/VersionTable.vue"],"sourcesContent":["<!-- frontend/src/components/VersionTable.vue -->\n<template>\n  <div class=\"versions-section\" v-if=\"versions.length\">\n    <h2>Version</h2>\n    <v-data-table\n      :headers=\"versionHeaders\"\n      :items=\"versions\"\n      item-key=\"id\"\n      class=\"elevation-1\"\n      hide-default-footer\n      disable-pagination\n    >\n      <template v-slot:item.note=\"{ item }\">\n        <div class=\"note-section\">\n          <div class=\"my-note\">\n            <h3>My Draft Note ({{ item.code }})</h3>\n            <v-textarea\n              label=\"여기에 노트를 작성하세요\"\n              rows=\"3\"\n              v-model=\"localNotesContent[item.id]\"\n              @input=\"emit('input-note', item.id, localNotesContent[item.id])\"\n              @blur=\"emit('save-note', item.id, localNotesContent[item.id])\"\n              variant=\"outlined\"\n              :class=\"{ 'saving-note': isSaving }\"\n            ></v-textarea>\n          </div>\n          <div class=\"other-notes\">\n            <h3>Others Draft Notes</h3>\n            <p>다른 사람의 노트 내용이 여기에 실시간으로 표시됩니다.</p>\n          </div>\n        </div>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  versions: Array,\n  notes: Object, // notesContent 객체 (초기값 및 외부 업데이트용)\n  notesComposable: Object, // notes composable 전체를 받음\n  isSaving: Object, // isSaving prop 타입을 Object로 변경\n});\n\nconst emit = defineEmits(['save-note', 'input-note']); // emit 이벤트 추가\n\nconst versionHeaders = [\n  { title: 'Version', key: 'code', sortable: false },\n  { title: 'Note', key: 'note', sortable: false },\n];\n\n// 로컬 노트 내용을 저장할 반응형 객체\nconst localNotesContent = ref({});\n\n// props.notes가 변경될 때 localNotesContent를 초기화\nwatch(() => props.notes, (newNotes) => {\n  localNotesContent.value = { ...newNotes };\n}, { immediate: true, deep: true });\n\n// isSaving prop을 감시하여 콘솔에 출력 (디버깅용)\nwatch(() => props.isSaving, (newIsSaving) => {\n  console.log('VersionTable received isSaving:', JSON.stringify(newIsSaving));\n}, { immediate: true, deep: true });\n\nconst handleInput = (versionId, value) => {\n  localNotesContent.value[versionId] = value;\n  emit('input-note', versionId, value);\n};\n\nconst handleBlur = (versionId) => {\n  // 현재 로컬 컨텐츠를 가지고 save-note 이벤트를 발생시킨다.\n  emit('save-note', versionId, localNotesContent.value[versionId]);\n};\n\n\n</script>\n\n<style scoped>\n.saving-note {\n  transition: background-color 0.5s ease-in-out; /* 트랜지션 시간 증가 */\n  background-color: #ffeb3b; /* 더 눈에 띄는 노란색 배경 */\n}\n/* 저장 완료 후 원래 색상으로 돌아오도록 CSS 트랜지션 추가 */\n/* 필요한 스타일이 있다면 여기에 추가 */\n</style>"],"mappings":";;;;AAqCA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAK;;;;;;;;;;;;;;;;IAEhC,IAAMC,KAAK,GAAGC,OAKZ;IAEF,IAAMC,IAAI,GAAGC,MAAwC,CAAC,CAAC;;IAEvD,IAAMC,cAAc,GAAG,CACrB;MAAEC,KAAK,EAAE,SAAS;MAAEC,GAAG,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAClD;MAAEF,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAChD;;IAED;IACA,IAAMC,iBAAiB,GAAGV,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACAC,KAAK,CAAC;MAAA,OAAMC,KAAK,CAACS,KAAK;IAAA,GAAE,UAACC,QAAQ,EAAK;MACrCF,iBAAiB,CAACG,KAAK,GAAAC,aAAA,KAAQF,QAAQ,CAAE;IAC3C,CAAC,EAAE;MAAEG,SAAS,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;;IAEnC;IACAf,KAAK,CAAC;MAAA,OAAMC,KAAK,CAACe,QAAQ;IAAA,GAAE,UAACC,WAAW,EAAK;MAC3CC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;IAC7E,CAAC,EAAE;MAAEH,SAAS,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAEnC,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAS,EAAEX,KAAK,EAAK;MACxCH,iBAAiB,CAACG,KAAK,CAACW,SAAS,CAAC,GAAGX,KAAK;MAC1CT,IAAI,CAAC,YAAY,EAAEoB,SAAS,EAAEX,KAAK,CAAC;IACtC,CAAC;IAED,IAAMY,UAAU,GAAG,SAAbA,UAAUA,CAAID,SAAS,EAAK;MAChC;MACApB,IAAI,CAAC,WAAW,EAAEoB,SAAS,EAAEd,iBAAiB,CAACG,KAAK,CAACW,SAAS,CAAC,CAAC;IAClE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}