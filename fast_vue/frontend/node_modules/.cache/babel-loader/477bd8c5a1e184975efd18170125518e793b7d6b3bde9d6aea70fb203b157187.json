{"ast":null,"code":"export function useAutofocus(props) {\n  function onIntersect(isIntersecting, entries) {\n    var _entries$0$target, _entries$0$target$foc;\n    if (!props.autofocus || !isIntersecting) return;\n    (_entries$0$target = entries[0].target) === null || _entries$0$target === void 0 || (_entries$0$target$foc = _entries$0$target.focus) === null || _entries$0$target$foc === void 0 || _entries$0$target$foc.call(_entries$0$target);\n  }\n  return {\n    onIntersect: onIntersect\n  };\n}","map":{"version":3,"names":["useAutofocus","props","onIntersect","isIntersecting","entries","_entries$0$target","_entries$0$target$foc","autofocus","target","focus","call"],"sources":["../../src/composables/autofocus.ts"],"sourcesContent":["interface AutofocusProps {\n  autofocus: boolean\n}\n\nexport function useAutofocus (props: AutofocusProps) {\n  function onIntersect (\n    isIntersecting: boolean,\n    entries: IntersectionObserverEntry[]\n  ) {\n    if (!props.autofocus || !isIntersecting) return\n\n    (entries[0].target as HTMLInputElement)?.focus?.()\n  }\n\n  return {\n    onIntersect,\n  }\n}\n"],"mappings":"AAIA,OAAO,SAASA,YAAYA,CAAEC,KAAqB,EAAE;EACnD,SAASC,WAAWA,CAClBC,cAAuB,EACvBC,OAAoC,EACpC;IAAA,IAAAC,iBAAA,EAAAC,qBAAA;IACA,IAAI,CAACL,KAAK,CAACM,SAAS,IAAI,CAACJ,cAAc,EAAE;IAExC,CAAAE,iBAAA,GAAAD,OAAO,CAAC,CAAC,CAAC,CAACI,MAAM,cAAAH,iBAAA,gBAAAC,qBAAA,GAAjBD,iBAAA,CAAwCI,KAAK,cAAAH,qBAAA,eAA7CA,qBAAA,CAAAI,IAAA,CAAAL,iBAAgD,CAAC;EACpD;EAEA,OAAO;IACLH,WAAA,EAAAA;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}