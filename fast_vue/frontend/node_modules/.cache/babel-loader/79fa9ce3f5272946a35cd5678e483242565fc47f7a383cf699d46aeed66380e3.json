{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\n// Utilities\nimport { watch } from 'vue';\nimport { deepEqual, getCurrentInstance } from \"../../../util/index.js\"; // Types\nexport function useOptions(_ref) {\n  var page = _ref.page,\n    itemsPerPage = _ref.itemsPerPage,\n    sortBy = _ref.sortBy,\n    groupBy = _ref.groupBy,\n    search = _ref.search;\n  var vm = getCurrentInstance('VDataTable');\n  var options = function options() {\n    return {\n      page: page.value,\n      itemsPerPage: itemsPerPage.value,\n      sortBy: sortBy.value,\n      groupBy: groupBy.value,\n      search: search.value\n    };\n  };\n  var oldOptions = null;\n  watch(options, function (value) {\n    if (deepEqual(oldOptions, value)) return;\n\n    // Reset page when searching\n    if (oldOptions && oldOptions.search !== value.search) {\n      page.value = 1;\n    }\n    vm.emit('update:options', value);\n    oldOptions = value;\n  }, {\n    deep: true,\n    immediate: true\n  });\n}","map":{"version":3,"names":["watch","deepEqual","getCurrentInstance","useOptions","_ref","page","itemsPerPage","sortBy","groupBy","search","vm","options","value","oldOptions","emit","deep","immediate"],"sources":["../../../../src/components/VDataTable/composables/options.ts"],"sourcesContent":["// Utilities\nimport { watch } from 'vue'\nimport { deepEqual, getCurrentInstance } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { SortItem } from './sort'\n\nexport function useOptions ({\n  page,\n  itemsPerPage,\n  sortBy,\n  groupBy,\n  search,\n}: {\n  page: Ref<number>\n  itemsPerPage: Ref<number>\n  sortBy: Ref<readonly SortItem[]>\n  groupBy: Ref<readonly SortItem[]>\n  search: Ref<string | undefined>\n}) {\n  const vm = getCurrentInstance('VDataTable')\n\n  const options = () => ({\n    page: page.value,\n    itemsPerPage: itemsPerPage.value,\n    sortBy: sortBy.value,\n    groupBy: groupBy.value,\n    search: search.value,\n  })\n\n  let oldOptions: ReturnType<typeof options> | null = null\n  watch(options, value => {\n    if (deepEqual(oldOptions, value)) return\n\n    // Reset page when searching\n    if (oldOptions && oldOptions.search !== value.search) {\n      page.value = 1\n    }\n\n    vm.emit('update:options', value)\n    oldOptions = value\n  }, { deep: true, immediate: true })\n}\n"],"mappings":";;AAAA;AACA,SAASA,KAAK,QAAQ,KAAK;AAAA,SAClBC,SAAS,EAAEC,kBAAkB,kCAEtC;AAIA,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAYvB;EAAA,IAXDC,IAAI,GAWLD,IAAA,CAXCC,IAAI;IACJC,YAAY,GAUbF,IAAA,CAVCE,YAAY;IACZC,MAAM,GASPH,IAAA,CATCG,MAAM;IACNC,OAAO,GAQRJ,IAAA,CARCI,OAAO;IACPC,MAAA,GAODL,IAAA,CAPCK,MAAA;EAQA,IAAMC,EAAE,GAAGR,kBAAkB,CAAC,YAAY,CAAC;EAE3C,IAAMS,OAAO,GAAG,SAAVA,OAAOA,CAAA;IAAA,OAAU;MACrBN,IAAI,EAAEA,IAAI,CAACO,KAAK;MAChBN,YAAY,EAAEA,YAAY,CAACM,KAAK;MAChCL,MAAM,EAAEA,MAAM,CAACK,KAAK;MACpBJ,OAAO,EAAEA,OAAO,CAACI,KAAK;MACtBH,MAAM,EAAEA,MAAM,CAACG;IACjB,CAAC;EAAA,CAAC;EAEF,IAAIC,UAA6C,GAAG,IAAI;EACxDb,KAAK,CAACW,OAAO,EAAE,UAAAC,KAAK,EAAI;IACtB,IAAIX,SAAS,CAACY,UAAU,EAAED,KAAK,CAAC,EAAE;;IAElC;IACA,IAAIC,UAAU,IAAIA,UAAU,CAACJ,MAAM,KAAKG,KAAK,CAACH,MAAM,EAAE;MACpDJ,IAAI,CAACO,KAAK,GAAG,CAAC;IAChB;IAEAF,EAAE,CAACI,IAAI,CAAC,gBAAgB,EAAEF,KAAK,CAAC;IAChCC,UAAU,GAAGD,KAAK;EACpB,CAAC,EAAE;IAAEG,IAAI,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}