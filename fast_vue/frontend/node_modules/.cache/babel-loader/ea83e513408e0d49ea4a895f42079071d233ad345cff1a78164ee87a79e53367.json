{"ast":null,"code":"import _regenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VDialog.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VOverlay } from \"../VOverlay/index.js\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.js\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\"; // Utilities\nimport { mergeProps, nextTick, onBeforeUnmount, ref, watch } from 'vue';\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport var makeVDialogProps = propsFactory(_objectSpread({\n  fullscreen: Boolean,\n  retainFocus: {\n    type: Boolean,\n    \"default\": true\n  },\n  scrollable: Boolean\n}, makeVOverlayProps({\n  origin: 'center center',\n  scrollStrategy: 'block',\n  transition: {\n    component: VDialogTransition\n  },\n  zIndex: 2400\n})), 'VDialog');\nexport var VDialog = genericComponent()({\n  name: 'VDialog',\n  props: makeVDialogProps(),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    afterEnter: function afterEnter() {\n      return true;\n    },\n    afterLeave: function afterLeave() {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var isActive = useProxiedModel(props, 'modelValue');\n    var _useScopeId = useScopeId(),\n      scopeId = _useScopeId.scopeId;\n    var overlay = ref();\n    function onFocusin(e) {\n      var _overlay$value, _overlay$value2;\n      var before = e.relatedTarget;\n      var after = e.target;\n      if (before !== after && (_overlay$value = overlay.value) !== null && _overlay$value !== void 0 && _overlay$value.contentEl && // We're the topmost dialog\n      (_overlay$value2 = overlay.value) !== null && _overlay$value2 !== void 0 && _overlay$value2.globalTop &&\n      // It isn't the document or the dialog body\n      ![document, overlay.value.contentEl].includes(after) &&\n      // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        var focusable = focusableChildren(overlay.value.contentEl);\n        if (!focusable.length) return;\n        var firstElement = focusable[0];\n        var lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    onBeforeUnmount(function () {\n      document.removeEventListener('focusin', onFocusin);\n    });\n    if (IN_BROWSER) {\n      watch(function () {\n        return isActive.value && props.retainFocus;\n      }, function (val) {\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    function onAfterEnter() {\n      var _overlay$value3;\n      emit('afterEnter');\n      if ((props.scrim || props.retainFocus) && (_overlay$value3 = overlay.value) !== null && _overlay$value3 !== void 0 && _overlay$value3.contentEl && !overlay.value.contentEl.contains(document.activeElement)) {\n        overlay.value.contentEl.focus({\n          preventScroll: true\n        });\n      }\n    }\n    function onAfterLeave() {\n      emit('afterLeave');\n    }\n    watch(isActive, /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(val) {\n        var _overlay$value$activa;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              if (val) {\n                _context.n = 2;\n                break;\n              }\n              _context.n = 1;\n              return nextTick();\n            case 1:\n              (_overlay$value$activa = overlay.value.activatorEl) === null || _overlay$value$activa === void 0 || _overlay$value$activa.focus({\n                preventScroll: true\n              });\n            case 2:\n              return _context.a(2);\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    useRender(function () {\n      var overlayProps = VOverlay.filterProps(props);\n      var activatorProps = mergeProps({\n        'aria-haspopup': 'dialog'\n      }, props.activatorProps);\n      var contentProps = mergeProps({\n        tabindex: -1\n      }, props.contentProps);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-dialog', {\n          'v-dialog--fullscreen': props.fullscreen,\n          'v-dialog--scrollable': props.scrollable\n        }, props[\"class\"]],\n        \"style\": props.style\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return isActive.value = $event;\n        },\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps,\n        \"contentProps\": contentProps,\n        \"height\": !props.fullscreen ? props.height : undefined,\n        \"width\": !props.fullscreen ? props.width : undefined,\n        \"maxHeight\": !props.fullscreen ? props.maxHeight : undefined,\n        \"maxWidth\": !props.fullscreen ? props.maxWidth : undefined,\n        \"role\": \"dialog\",\n        \"onAfterEnter\": onAfterEnter,\n        \"onAfterLeave\": onAfterLeave\n      }, scopeId), {\n        activator: slots.activator,\n        \"default\": function _default() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": \"VDialog\"\n          }, {\n            \"default\": function _default() {\n              var _slots$default;\n              return [(_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call.apply(_slots$default, [slots].concat(args))];\n            }\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VDefaultsProvider","VOverlay","makeVOverlayProps","forwardRefs","useProxiedModel","useScopeId","mergeProps","nextTick","onBeforeUnmount","ref","watch","focusableChildren","genericComponent","IN_BROWSER","propsFactory","useRender","makeVDialogProps","_objectSpread","fullscreen","Boolean","retainFocus","type","scrollable","origin","scrollStrategy","transition","component","zIndex","VDialog","name","props","emits","updateModelValue","value","afterEnter","afterLeave","setup","_ref","emit","slots","isActive","_useScopeId","scopeId","overlay","onFocusin","e","_overlay$value","_overlay$value2","before","relatedTarget","after","target","contentEl","globalTop","document","includes","contains","focusable","length","firstElement","lastElement","focus","removeEventListener","val","addEventListener","immediate","onAfterEnter","_overlay$value3","scrim","activeElement","preventScroll","onAfterLeave","_ref2","_asyncToGenerator","_regenerator","m","_callee","_overlay$value$activa","w","_context","n","activatorEl","a","_x","apply","arguments","overlayProps","filterProps","activatorProps","contentProps","tabindex","_createVNode","_mergeProps","style","onUpdateModelValue","$event","height","undefined","width","maxHeight","maxWidth","activator","default","_len","args","Array","_key","_slots$default","call","concat"],"sources":["../../../src/components/VDialog/VDialog.tsx"],"sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { mergeProps, nextTick, onBeforeUnmount, ref, watch } from 'vue'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVDialogProps = propsFactory({\n  fullscreen: Boolean,\n  retainFocus: {\n    type: Boolean,\n    default: true,\n  },\n  scrollable: Boolean,\n\n  ...makeVOverlayProps({\n    origin: 'center center' as const,\n    scrollStrategy: 'block' as const,\n    transition: { component: VDialogTransition },\n    zIndex: 2400,\n  }),\n}, 'VDialog')\n\nexport const VDialog = genericComponent<OverlaySlots>()({\n  name: 'VDialog',\n\n  props: makeVDialogProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n    afterEnter: () => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const overlay = ref<VOverlay>()\n    function onFocusin (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      if (\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost dialog\n        overlay.value?.globalTop &&\n        // It isn't the document or the dialog body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the dialog body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n\n        if (!focusable.length) return\n\n        const firstElement = focusable[0]\n        const lastElement = focusable[focusable.length - 1]\n\n        if (before === firstElement) {\n          lastElement.focus()\n        } else {\n          firstElement.focus()\n        }\n      }\n    }\n\n    onBeforeUnmount(() => {\n      document.removeEventListener('focusin', onFocusin)\n    })\n\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val\n          ? document.addEventListener('focusin', onFocusin)\n          : document.removeEventListener('focusin', onFocusin)\n      }, { immediate: true })\n    }\n\n    function onAfterEnter () {\n      emit('afterEnter')\n      if (\n        (props.scrim || props.retainFocus) &&\n        overlay.value?.contentEl &&\n        !overlay.value.contentEl.contains(document.activeElement)\n      ) {\n        overlay.value.contentEl.focus({ preventScroll: true })\n      }\n    }\n\n    function onAfterLeave () {\n      emit('afterLeave')\n    }\n\n    watch(isActive, async val => {\n      if (!val) {\n        await nextTick()\n        overlay.value!.activatorEl?.focus({ preventScroll: true })\n      }\n    })\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n      const activatorProps = mergeProps({\n        'aria-haspopup': 'dialog',\n      }, props.activatorProps)\n      const contentProps = mergeProps({\n        tabindex: -1,\n      }, props.contentProps)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-dialog',\n            {\n              'v-dialog--fullscreen': props.fullscreen,\n              'v-dialog--scrollable': props.scrollable,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          aria-modal=\"true\"\n          activatorProps={ activatorProps }\n          contentProps={ contentProps }\n          height={ !props.fullscreen ? props.height : undefined }\n          width={ !props.fullscreen ? props.width : undefined }\n          maxHeight={ !props.fullscreen ? props.maxHeight : undefined }\n          maxWidth={ !props.fullscreen ? props.maxWidth : undefined }\n          role=\"dialog\"\n          onAfterEnter={ onAfterEnter }\n          onAfterLeave={ onAfterLeave }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VDialog\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VDialog = InstanceType<typeof VDialog>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}