{"ast":null,"code":"import _objectWithoutProperties from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"modelValue\"],\n  _excluded2 = [\"class\"];\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { Fragment as _Fragment, createElementVNode as _createElementVNode, mergeProps as _mergeProps, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VTextarea.css\";\nimport \"../VTextField/VTextField.css\";\n\n// Components\nimport { VCounter } from \"../VCounter/VCounter.js\";\nimport { VField } from \"../VField/index.js\";\nimport { makeVFieldProps } from \"../VField/VField.js\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.js\"; // Composables\nimport { useAutofocus } from \"../../composables/autofocus.js\";\nimport { useFocus } from \"../../composables/focus.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\"; // Directives\nimport vIntersect from \"../../directives/intersect/index.js\"; // Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport var makeVTextareaProps = propsFactory(_objectSpread(_objectSpread({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: Function,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    \"default\": 5,\n    validator: function validator(v) {\n      return !isNaN(parseFloat(v));\n    }\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: function validator(v) {\n      return !isNaN(parseFloat(v));\n    }\n  },\n  suffix: String,\n  modelModifiers: Object\n}, makeVInputProps()), makeVFieldProps()), 'VTextarea');\nexport var VTextarea = genericComponent()({\n  name: 'VTextarea',\n  directives: {\n    vIntersect: vIntersect\n  },\n  inheritAttrs: false,\n  props: makeVTextareaProps(),\n  emits: {\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'mousedown:control': function mousedownControl(e) {\n      return true;\n    },\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      emit = _ref.emit,\n      slots = _ref.slots;\n    var model = useProxiedModel(props, 'modelValue');\n    var _useFocus = useFocus(props),\n      isFocused = _useFocus.isFocused,\n      focus = _useFocus.focus,\n      blur = _useFocus.blur;\n    var _useAutofocus = useAutofocus(props),\n      onIntersect = _useAutofocus.onIntersect;\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : (model.value || '').toString().length;\n    });\n    var max = computed(function () {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    var vInputRef = ref();\n    var vFieldRef = ref();\n    var controlHeight = shallowRef('');\n    var textareaRef = ref();\n    var isActive = computed(function () {\n      return props.persistentPlaceholder || isFocused.value || props.active;\n    });\n    function onFocus() {\n      if (textareaRef.value !== document.activeElement) {\n        var _textareaRef$value;\n        (_textareaRef$value = textareaRef.value) === null || _textareaRef$value === void 0 || _textareaRef$value.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(function () {\n        model.value = '';\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      var _props$modelModifiers;\n      var el = e.target;\n      model.value = el.value;\n      if ((_props$modelModifiers = props.modelModifiers) !== null && _props$modelModifiers !== void 0 && _props$modelModifiers.trim) {\n        var caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(function () {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n    var sizerRef = ref();\n    var rows = ref(Number(props.rows));\n    var isPlainOrUnderlined = computed(function () {\n      return ['plain', 'underlined'].includes(props.variant);\n    });\n    watchEffect(function () {\n      if (!props.autoGrow) rows.value = Number(props.rows);\n    });\n    function calculateInputHeight() {\n      if (!props.autoGrow) return;\n      nextTick(function () {\n        if (!sizerRef.value || !vFieldRef.value) return;\n        var style = getComputedStyle(sizerRef.value);\n        var fieldStyle = getComputedStyle(vFieldRef.value.$el);\n        var padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) + parseFloat(style.getPropertyValue('--v-input-padding-top')) + parseFloat(style.getPropertyValue('--v-field-padding-bottom'));\n        var height = sizerRef.value.scrollHeight;\n        var lineHeight = parseFloat(style.lineHeight);\n        var minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue('--v-input-control-height')));\n        var maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;\n        var newHeight = clamp(height !== null && height !== void 0 ? height : 0, minHeight, maxHeight);\n        rows.value = Math.floor((newHeight - padding) / lineHeight);\n        controlHeight.value = convertToUnit(newHeight);\n      });\n    }\n    onMounted(calculateInputHeight);\n    watch(model, calculateInputHeight);\n    watch(function () {\n      return props.rows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.maxRows;\n    }, calculateInputHeight);\n    watch(function () {\n      return props.density;\n    }, calculateInputHeight);\n    var observer;\n    watch(sizerRef, function (val) {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight);\n        observer.observe(sizerRef.value);\n      } else {\n        var _observer;\n        (_observer = observer) === null || _observer === void 0 || _observer.disconnect();\n      }\n    });\n    onBeforeUnmount(function () {\n      var _observer2;\n      (_observer2 = observer) === null || _observer2 === void 0 || _observer2.disconnect();\n    });\n    useRender(function () {\n      var hasCounter = !!(slots.counter || props.counter || props.counterValue);\n      var hasDetails = !!(hasCounter || slots.details);\n      var _filterInputAttrs = filterInputAttrs(attrs),\n        _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n        rootAttrs = _filterInputAttrs2[0],\n        inputAttrs = _filterInputAttrs2[1];\n      var _VInput$filterProps = VInput.filterProps(props),\n        _ = _VInput$filterProps.modelValue,\n        inputProps = _objectWithoutProperties(_VInput$filterProps, _excluded);\n      var fieldProps = VField.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": ['v-textarea v-text-field', {\n          'v-textarea--prefixed': props.prefix,\n          'v-textarea--suffixed': props.suffix,\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-textarea--auto-grow': props.autoGrow,\n          'v-textarea--no-resize': props.noResize || props.autoGrow,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props[\"class\"]],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default(_ref2) {\n          var id = _ref2.id,\n            isDisabled = _ref2.isDisabled,\n            isDirty = _ref2.isDirty,\n            isReadonly = _ref2.isReadonly,\n            isValid = _ref2.isValid;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"style\": {\n              '--v-textarea-control-height': controlHeight.value\n            },\n            \"onClick\": onControlClick,\n            \"onMousedown\": onControlMousedown,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"centerAffix\": rows.value === 1 && !isPlainOrUnderlined.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), _objectSpread(_objectSpread({}, slots), {}, {\n            \"default\": function _default(_ref3) {\n              var _ref3$props = _ref3.props,\n                fieldClass = _ref3$props[\"class\"],\n                slotProps = _objectWithoutProperties(_ref3$props, _excluded2);\n              return _createElementVNode(_Fragment, null, [props.prefix && _createElementVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [props.prefix]), _withDirectives(_createElementVNode(\"textarea\", _mergeProps({\n                \"ref\": textareaRef,\n                \"class\": fieldClass,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"placeholder\": props.placeholder,\n                \"rows\": props.rows,\n                \"name\": props.name,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[vIntersect, {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]), props.autoGrow && _withDirectives(_createElementVNode(\"textarea\", {\n                \"class\": _normalizeClass([fieldClass, 'v-textarea__sizer']),\n                \"id\": \"\".concat(slotProps.id, \"-sizer\"),\n                \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                  return model.value = $event;\n                },\n                \"ref\": sizerRef,\n                \"readonly\": true,\n                \"aria-hidden\": \"true\"\n              }, null), [[_vModelText, model.value]]), props.suffix && _createElementVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [props.suffix])]);\n            }\n          }));\n        },\n        details: hasDetails ? function (slotProps) {\n          var _slots$details;\n          return _createElementVNode(_Fragment, null, [(_slots$details = slots.details) === null || _slots$details === void 0 ? void 0 : _slots$details.call(slots, slotProps), hasCounter && _createElementVNode(_Fragment, null, [_createElementVNode(\"span\", null, null), _createVNode(VCounter, {\n            \"active\": props.persistentCounter || isFocused.value,\n            \"value\": counterValue.value,\n            \"max\": max.value,\n            \"disabled\": props.disabled\n          }, slots.counter)])]);\n        } : undefined\n      }));\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef);\n  }\n});","map":{"version":3,"names":["VCounter","VField","makeVFieldProps","makeVInputProps","VInput","useAutofocus","useFocus","forwardRefs","useProxiedModel","vIntersect","computed","nextTick","onBeforeUnmount","onMounted","ref","shallowRef","watch","watchEffect","callEvent","clamp","convertToUnit","filterInputAttrs","genericComponent","propsFactory","useRender","makeVTextareaProps","_objectSpread","autoGrow","Boolean","autofocus","counter","Number","String","counterValue","Function","prefix","placeholder","persistentPlaceholder","persistentCounter","noResize","rows","type","validator","v","isNaN","parseFloat","maxRows","suffix","modelModifiers","Object","VTextarea","name","directives","inheritAttrs","props","emits","clickControl","e","mousedownControl","updateFocused","focused","updateModelValue","val","setup","_ref","attrs","emit","slots","model","_useFocus","isFocused","focus","blur","_useAutofocus","onIntersect","value","toString","length","max","maxlength","undefined","vInputRef","vFieldRef","controlHeight","textareaRef","isActive","active","onFocus","document","activeElement","_textareaRef$value","onControlClick","onControlMousedown","onClear","stopPropagation","onInput","_props$modelModifiers","el","target","trim","caretPosition","selectionStart","selectionEnd","sizerRef","isPlainOrUnderlined","includes","variant","calculateInputHeight","style","getComputedStyle","fieldStyle","$el","padding","getPropertyValue","height","scrollHeight","lineHeight","minHeight","Math","maxHeight","Infinity","newHeight","floor","density","observer","ResizeObserver","observe","_observer","disconnect","_observer2","hasCounter","hasDetails","details","_filterInputAttrs","_filterInputAttrs2","_slicedToArray","rootAttrs","inputAttrs","_VInput$filterProps","filterProps","_","modelValue","inputProps","_objectWithoutProperties","_excluded","fieldProps","_createVNode","_mergeProps","onUpdateModelValue","$event","default","_ref2","id","isDisabled","isDirty","isReadonly","isValid","dirty","_ref3","_ref3$props","fieldClass","slotProps","_excluded2","_createElementVNode","_Fragment","_withDirectives","handler","once","_normalizeClass","concat","_vModelText","_slots$details","call","disabled"],"sources":["../../../src/components/VTextarea/VTextarea.tsx"],"sourcesContent":["// Styles\nimport './VTextarea.sass'\nimport '../VTextField/VTextField.sass'\n\n// Components\nimport { VCounter } from '@/components/VCounter/VCounter'\nimport { VField } from '@/components/VField'\nimport { makeVFieldProps } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useAutofocus } from '@/composables/autofocus'\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport vIntersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { callEvent, clamp, convertToUnit, filterInputAttrs, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCounterSlot } from '@/components/VCounter/VCounter'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport const makeVTextareaProps = propsFactory({\n  autoGrow: Boolean,\n  autofocus: Boolean,\n  counter: [Boolean, Number, String] as PropType<true | number | string>,\n  counterValue: Function as PropType<(value: any) => number>,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  noResize: Boolean,\n  rows: {\n    type: [Number, String],\n    default: 5,\n    validator: (v: any) => !isNaN(parseFloat(v)),\n  },\n  maxRows: {\n    type: [Number, String],\n    validator: (v: any) => !isNaN(parseFloat(v)),\n  },\n  suffix: String,\n  modelModifiers: Object as PropType<Record<string, boolean>>,\n\n  ...makeVInputProps(),\n  ...makeVFieldProps(),\n}, 'VTextarea')\n\ntype VTextareaSlots = Omit<VInputSlots & VFieldSlots, 'default'> & {\n  counter: VCounterSlot\n}\n\nexport const VTextarea = genericComponent<VTextareaSlots>()({\n  name: 'VTextarea',\n\n  directives: { vIntersect },\n\n  inheritAttrs: false,\n\n  props: makeVTextareaProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const { onIntersect } = useAutofocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as string | number\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const controlHeight = shallowRef('')\n    const textareaRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      props.persistentPlaceholder ||\n      isFocused.value ||\n      props.active\n    ))\n\n    function onFocus () {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = ''\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      const el = e.target as HTMLTextAreaElement\n      model.value = el.value\n      if (props.modelModifiers?.trim) {\n        const caretPosition = [el.selectionStart, el.selectionEnd]\n        nextTick(() => {\n          el.selectionStart = caretPosition[0]\n          el.selectionEnd = caretPosition[1]\n        })\n      }\n    }\n\n    const sizerRef = ref<HTMLTextAreaElement>()\n    const rows = ref(Number(props.rows))\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    watchEffect(() => {\n      if (!props.autoGrow) rows.value = Number(props.rows)\n    })\n    function calculateInputHeight () {\n      if (!props.autoGrow) return\n\n      nextTick(() => {\n        if (!sizerRef.value || !vFieldRef.value) return\n\n        const style = getComputedStyle(sizerRef.value)\n        const fieldStyle = getComputedStyle(vFieldRef.value.$el)\n\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-input-padding-top')) +\n          parseFloat(style.getPropertyValue('--v-field-padding-bottom'))\n\n        const height = sizerRef.value.scrollHeight\n        const lineHeight = parseFloat(style.lineHeight)\n        const minHeight = Math.max(\n          parseFloat(props.rows) * lineHeight + padding,\n          parseFloat(fieldStyle.getPropertyValue('--v-input-control-height'))\n        )\n        const maxHeight = parseFloat(props.maxRows!) * lineHeight + padding || Infinity\n        const newHeight = clamp(height ?? 0, minHeight, maxHeight)\n        rows.value = Math.floor((newHeight - padding) / lineHeight)\n\n        controlHeight.value = convertToUnit(newHeight)\n      })\n    }\n\n    onMounted(calculateInputHeight)\n    watch(model, calculateInputHeight)\n    watch(() => props.rows, calculateInputHeight)\n    watch(() => props.maxRows, calculateInputHeight)\n    watch(() => props.density, calculateInputHeight)\n\n    let observer: ResizeObserver | undefined\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight)\n        observer.observe(sizerRef.value!)\n      } else {\n        observer?.disconnect()\n      }\n    })\n    onBeforeUnmount(() => {\n      observer?.disconnect()\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-textarea v-text-field',\n            {\n              'v-textarea--prefixed': props.prefix,\n              'v-textarea--suffixed': props.suffix,\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-textarea--auto-grow': props.autoGrow,\n              'v-textarea--no-resize': props.noResize || props.autoGrow,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ rows.value === 1 && !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                style={{\n                  '--v-textarea-control-height': controlHeight.value,\n                }}\n                onClick={ onControlClick }\n                onMousedown={ onControlMousedown }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                centerAffix={ rows.value === 1 && !isPlainOrUnderlined.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      { props.prefix && (\n                        <span class=\"v-text-field__prefix\">\n                          { props.prefix }\n                        </span>\n                      )}\n\n                      <textarea\n                        ref={ textareaRef }\n                        class={ fieldClass }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        placeholder={ props.placeholder }\n                        rows={ props.rows }\n                        name={ props.name }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { props.autoGrow && (\n                        <textarea\n                          class={[\n                            fieldClass,\n                            'v-textarea__sizer',\n                          ]}\n                          id={ `${slotProps.id}-sizer` }\n                          v-model={ model.value }\n                          ref={ sizerRef }\n                          readonly\n                          aria-hidden=\"true\"\n                        />\n                      )}\n\n                      { props.suffix && (\n                        <span class=\"v-text-field__suffix\">\n                          { props.suffix }\n                        </span>\n                      )}\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, textareaRef)\n  },\n})\n\nexport type VTextarea = InstanceType<typeof VTextarea>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}