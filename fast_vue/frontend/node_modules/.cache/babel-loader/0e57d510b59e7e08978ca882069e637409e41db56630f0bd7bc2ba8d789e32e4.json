{"ast":null,"code":"import _slicedToArray from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { Fragment as _Fragment, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createVNode as _createVNode, mergeProps as _mergeProps, normalizeStyle as _normalizeStyle } from \"vue\";\n// Styles\nimport \"./VOtpInput.css\";\n\n// Components\nimport { makeVFieldProps, VField } from \"../VField/VField.js\";\nimport { VOverlay } from \"../VOverlay/VOverlay.js\";\nimport { VProgressCircular } from \"../VProgressCircular/VProgressCircular.js\"; // Composables\nimport { provideDefaults } from \"../../composables/defaults.js\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.js\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.js\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { useToggleScope } from \"../../composables/toggleScope.js\"; // Utilities\nimport { computed, effectScope, nextTick, ref, toRef, watch, watchEffect } from 'vue';\nimport { filterInputAttrs, focusChild, genericComponent, pick, propsFactory, useRender } from \"../../util/index.js\"; // Types\n// Types\nexport var makeVOtpInputProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  autofocus: Boolean,\n  divider: String,\n  focusAll: Boolean,\n  label: {\n    type: String,\n    \"default\": '$vuetify.input.otp'\n  },\n  length: {\n    type: [Number, String],\n    \"default\": 6\n  },\n  modelValue: {\n    type: [Number, String],\n    \"default\": undefined\n  },\n  placeholder: String,\n  type: {\n    type: String,\n    \"default\": 'number'\n  }\n}, makeDimensionProps()), makeFocusProps()), pick(makeVFieldProps({\n  variant: 'outlined'\n}), ['baseColor', 'bgColor', 'class', 'color', 'disabled', 'error', 'loading', 'rounded', 'style', 'theme', 'variant'])), 'VOtpInput');\nexport var VOtpInput = genericComponent()({\n  name: 'VOtpInput',\n  props: makeVOtpInputProps(),\n  emits: {\n    finish: function finish(val) {\n      return true;\n    },\n    'update:focused': function updateFocused(val) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      emit = _ref.emit,\n      slots = _ref.slots;\n    var _useDimension = useDimension(props),\n      dimensionStyles = _useDimension.dimensionStyles;\n    var _useFocus = useFocus(props),\n      isFocused = _useFocus.isFocused,\n      focus = _useFocus.focus,\n      blur = _useFocus.blur;\n    var model = useProxiedModel(props, 'modelValue', '', function (val) {\n      return val == null ? [] : String(val).split('');\n    }, function (val) {\n      return val.join('');\n    });\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var length = computed(function () {\n      return Number(props.length);\n    });\n    var fields = computed(function () {\n      return Array(length.value).fill(0);\n    });\n    var focusIndex = ref(-1);\n    var contentRef = ref();\n    var inputRef = ref([]);\n    var current = computed(function () {\n      return inputRef.value[focusIndex.value];\n    });\n    useToggleScope(function () {\n      return props.autofocus;\n    }, function () {\n      var intersectScope = effectScope();\n      intersectScope.run(function () {\n        var _useIntersectionObser = useIntersectionObserver(),\n          intersectionRef = _useIntersectionObser.intersectionRef,\n          isIntersecting = _useIntersectionObser.isIntersecting;\n        watchEffect(function () {\n          intersectionRef.value = inputRef.value[0];\n        });\n        watch(isIntersecting, function (v) {\n          var _intersectionRef$valu;\n          if (!v) return;\n          (_intersectionRef$valu = intersectionRef.value) === null || _intersectionRef$valu === void 0 || _intersectionRef$valu.focus();\n          intersectScope.stop();\n        });\n      });\n    });\n    function onInput() {\n      // The maxlength attribute doesn't work for the number type input, so the text type is used.\n      // The following logic simulates the behavior of a number input.\n      if (isValidNumber(current.value.value)) {\n        current.value.value = '';\n        return;\n      }\n      var array = model.value.slice();\n      var value = current.value.value;\n      array[focusIndex.value] = value;\n      var target = null;\n      if (focusIndex.value > model.value.length) {\n        target = model.value.length + 1;\n      } else if (focusIndex.value + 1 !== length.value) {\n        target = 'next';\n      }\n      model.value = array;\n      if (target) focusChild(contentRef.value, target);\n    }\n    function onKeydown(e) {\n      var array = model.value.slice();\n      var index = focusIndex.value;\n      var target = null;\n      if (!['ArrowLeft', 'ArrowRight', 'Backspace', 'Delete'].includes(e.key)) return;\n      e.preventDefault();\n      if (e.key === 'ArrowLeft') {\n        target = 'prev';\n      } else if (e.key === 'ArrowRight') {\n        target = 'next';\n      } else if (['Backspace', 'Delete'].includes(e.key)) {\n        array[focusIndex.value] = '';\n        model.value = array;\n        if (focusIndex.value > 0 && e.key === 'Backspace') {\n          target = 'prev';\n        } else {\n          requestAnimationFrame(function () {\n            var _inputRef$value$index;\n            (_inputRef$value$index = inputRef.value[index]) === null || _inputRef$value$index === void 0 || _inputRef$value$index.select();\n          });\n        }\n      }\n      requestAnimationFrame(function () {\n        if (target != null) {\n          focusChild(contentRef.value, target);\n        }\n      });\n    }\n    function _onPaste(index, e) {\n      var _e$clipboardData$getD, _e$clipboardData, _inputRef$value;\n      e.preventDefault();\n      e.stopPropagation();\n      var clipboardText = (_e$clipboardData$getD = e === null || e === void 0 || (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 ? void 0 : _e$clipboardData.getData('Text').trim().slice(0, length.value)) !== null && _e$clipboardData$getD !== void 0 ? _e$clipboardData$getD : '';\n      if (isValidNumber(clipboardText)) return;\n      model.value = clipboardText.split('');\n      (_inputRef$value = inputRef.value) === null || _inputRef$value === void 0 || _inputRef$value[index].blur();\n    }\n    function reset() {\n      model.value = [];\n    }\n    function _onFocus(e, index) {\n      focus();\n      focusIndex.value = index;\n    }\n    function onBlur() {\n      blur();\n      focusIndex.value = -1;\n    }\n    function isValidNumber(value) {\n      return props.type === 'number' && /[^0-9]/g.test(value);\n    }\n    provideDefaults({\n      VField: {\n        color: toRef(function () {\n          return props.color;\n        }),\n        bgColor: toRef(function () {\n          return props.color;\n        }),\n        baseColor: toRef(function () {\n          return props.baseColor;\n        }),\n        disabled: toRef(function () {\n          return props.disabled;\n        }),\n        error: toRef(function () {\n          return props.error;\n        }),\n        variant: toRef(function () {\n          return props.variant;\n        })\n      }\n    }, {\n      scoped: true\n    });\n    watch(model, function (val) {\n      if (val.length === length.value) {\n        focusIndex.value = length.value - 1;\n        emit('finish', val.join(''));\n      }\n    }, {\n      deep: true\n    });\n    watch(focusIndex, function (val) {\n      if (val < 0) return;\n      nextTick(function () {\n        var _inputRef$value$val;\n        (_inputRef$value$val = inputRef.value[val]) === null || _inputRef$value$val === void 0 || _inputRef$value$val.select();\n      });\n    });\n    useRender(function () {\n      var _slots$default;\n      var _filterInputAttrs = filterInputAttrs(attrs),\n        _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n        rootAttrs = _filterInputAttrs2[0],\n        inputAttrs = _filterInputAttrs2[1];\n      return _createElementVNode(\"div\", _mergeProps({\n        \"class\": ['v-otp-input', {\n          'v-otp-input--divided': !!props.divider\n        }, props[\"class\"]],\n        \"style\": [props.style]\n      }, rootAttrs), [_createElementVNode(\"div\", {\n        \"ref\": contentRef,\n        \"class\": \"v-otp-input__content\",\n        \"style\": _normalizeStyle([dimensionStyles.value])\n      }, [fields.value.map(function (_, i) {\n        return _createElementVNode(_Fragment, null, [props.divider && i !== 0 && _createElementVNode(\"span\", {\n          \"class\": \"v-otp-input__divider\"\n        }, [props.divider]), _createVNode(VField, {\n          \"focused\": isFocused.value && props.focusAll || focusIndex.value === i,\n          \"key\": i\n        }, _objectSpread(_objectSpread({}, slots), {}, {\n          loader: undefined,\n          \"default\": function _default() {\n            return _createElementVNode(\"input\", {\n              \"ref\": function ref(val) {\n                return inputRef.value[i] = val;\n              },\n              \"aria-label\": t(props.label, i + 1),\n              \"autofocus\": i === 0 && props.autofocus,\n              \"autocomplete\": \"one-time-code\",\n              \"class\": _normalizeClass(['v-otp-input__field']),\n              \"disabled\": props.disabled,\n              \"inputmode\": props.type === 'number' ? 'numeric' : 'text',\n              \"min\": props.type === 'number' ? 0 : undefined,\n              \"maxlength\": i === 0 ? length.value : '1',\n              \"placeholder\": props.placeholder,\n              \"type\": props.type === 'number' ? 'text' : props.type,\n              \"value\": model.value[i],\n              \"onInput\": onInput,\n              \"onFocus\": function onFocus(e) {\n                return _onFocus(e, i);\n              },\n              \"onBlur\": onBlur,\n              \"onKeydown\": onKeydown,\n              \"onPaste\": function onPaste(event) {\n                return _onPaste(i, event);\n              }\n            }, null);\n          }\n        }))]);\n      }), _createElementVNode(\"input\", _mergeProps({\n        \"class\": \"v-otp-input-input\",\n        \"type\": \"hidden\"\n      }, inputAttrs, {\n        \"value\": model.value.join('')\n      }), null), _createVNode(VOverlay, {\n        \"contained\": true,\n        \"content-class\": \"v-otp-input__loader\",\n        \"model-value\": !!props.loading,\n        \"persistent\": true\n      }, {\n        \"default\": function _default() {\n          var _slots$loader, _slots$loader2;\n          return [(_slots$loader = (_slots$loader2 = slots.loader) === null || _slots$loader2 === void 0 ? void 0 : _slots$loader2.call(slots)) !== null && _slots$loader !== void 0 ? _slots$loader : _createVNode(VProgressCircular, {\n            \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n            \"indeterminate\": true,\n            \"size\": \"24\",\n            \"width\": \"2\"\n          }, null)];\n        }\n      }), (_slots$default = slots[\"default\"]) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)])]);\n    });\n    return {\n      blur: function blur() {\n        var _inputRef$value2;\n        (_inputRef$value2 = inputRef.value) === null || _inputRef$value2 === void 0 || _inputRef$value2.some(function (input) {\n          return input.blur();\n        });\n      },\n      focus: function focus() {\n        var _inputRef$value3;\n        (_inputRef$value3 = inputRef.value) === null || _inputRef$value3 === void 0 || _inputRef$value3[0].focus();\n      },\n      reset: reset,\n      isFocused: isFocused\n    };\n  }\n});","map":{"version":3,"names":["makeVFieldProps","VField","VOverlay","VProgressCircular","provideDefaults","makeDimensionProps","useDimension","makeFocusProps","useFocus","useIntersectionObserver","useLocale","useProxiedModel","useToggleScope","computed","effectScope","nextTick","ref","toRef","watch","watchEffect","filterInputAttrs","focusChild","genericComponent","pick","propsFactory","useRender","makeVOtpInputProps","_objectSpread","autofocus","Boolean","divider","String","focusAll","label","type","length","Number","modelValue","undefined","placeholder","variant","VOtpInput","name","props","emits","finish","val","updateFocused","updateModelValue","setup","_ref","attrs","emit","slots","_useDimension","dimensionStyles","_useFocus","isFocused","focus","blur","model","split","join","_useLocale","t","fields","Array","value","fill","focusIndex","contentRef","inputRef","current","intersectScope","run","_useIntersectionObser","intersectionRef","isIntersecting","v","_intersectionRef$valu","stop","onInput","isValidNumber","array","slice","target","onKeydown","e","index","includes","key","preventDefault","requestAnimationFrame","_inputRef$value$index","select","onPaste","_e$clipboardData$getD","_e$clipboardData","_inputRef$value","stopPropagation","clipboardText","clipboardData","getData","trim","reset","onFocus","onBlur","test","color","bgColor","baseColor","disabled","error","scoped","deep","_inputRef$value$val","_slots$default","_filterInputAttrs","_filterInputAttrs2","_slicedToArray","rootAttrs","inputAttrs","_createElementVNode","_mergeProps","style","_normalizeStyle","map","_","i","_Fragment","_createVNode","loader","default","_normalizeClass","event","loading","_slots$loader","_slots$loader2","call","_inputRef$value2","some","input","_inputRef$value3"],"sources":["../../../src/components/VOtpInput/VOtpInput.tsx"],"sourcesContent":["// Styles\nimport './VOtpInput.sass'\n\n// Components\nimport { makeVFieldProps, VField } from '@/components/VField/VField'\nimport { VOverlay } from '@/components/VOverlay/VOverlay'\nimport { VProgressCircular } from '@/components/VProgressCircular/VProgressCircular'\n\n// Composables\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, effectScope, nextTick, ref, toRef, watch, watchEffect } from 'vue'\nimport { filterInputAttrs, focusChild, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// Types\nexport type VOtpInputSlots = {\n  default: never\n  loader: never\n}\n\nexport const makeVOtpInputProps = propsFactory({\n  autofocus: Boolean,\n  divider: String,\n  focusAll: Boolean,\n  label: {\n    type: String,\n    default: '$vuetify.input.otp',\n  },\n  length: {\n    type: [Number, String],\n    default: 6,\n  },\n  modelValue: {\n    type: [Number, String],\n    default: undefined,\n  },\n  placeholder: String,\n  type: {\n    type: String as PropType<'text' | 'password' | 'number'>,\n    default: 'number',\n  },\n\n  ...makeDimensionProps(),\n  ...makeFocusProps(),\n  ...pick(makeVFieldProps({\n    variant: 'outlined' as const,\n  }), [\n    'baseColor',\n    'bgColor',\n    'class',\n    'color',\n    'disabled',\n    'error',\n    'loading',\n    'rounded',\n    'style',\n    'theme',\n    'variant',\n  ]),\n}, 'VOtpInput')\n\nexport const VOtpInput = genericComponent<VOtpInputSlots>()({\n  name: 'VOtpInput',\n\n  props: makeVOtpInputProps(),\n\n  emits: {\n    finish: (val: string) => true,\n    'update:focused': (val: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { dimensionStyles } = useDimension(props)\n    const { isFocused, focus, blur } = useFocus(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      '',\n      val => val == null ? [] : String(val).split(''),\n      val => val.join('')\n    )\n    const { t } = useLocale()\n\n    const length = computed(() => Number(props.length))\n    const fields = computed(() => Array(length.value).fill(0))\n    const focusIndex = ref(-1)\n    const contentRef = ref<HTMLElement>()\n    const inputRef = ref<HTMLInputElement[]>([])\n    const current = computed(() => inputRef.value[focusIndex.value])\n\n    useToggleScope(() => props.autofocus, () => {\n      const intersectScope = effectScope()\n      intersectScope.run(() => {\n        const { intersectionRef, isIntersecting } = useIntersectionObserver()\n        watchEffect(() => {\n          intersectionRef.value = inputRef.value[0]\n        })\n        watch(isIntersecting, v => {\n          if (!v) return\n          intersectionRef.value?.focus()\n          intersectScope.stop()\n        })\n      })\n    })\n\n    function onInput () {\n      // The maxlength attribute doesn't work for the number type input, so the text type is used.\n      // The following logic simulates the behavior of a number input.\n      if (isValidNumber(current.value.value)) {\n        current.value.value = ''\n        return\n      }\n\n      const array = model.value.slice()\n      const value = current.value.value\n\n      array[focusIndex.value] = value\n\n      let target: any = null\n\n      if (focusIndex.value > model.value.length) {\n        target = model.value.length + 1\n      } else if (focusIndex.value + 1 !== length.value) {\n        target = 'next'\n      }\n\n      model.value = array\n\n      if (target) focusChild(contentRef.value!, target)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const array = model.value.slice()\n      const index = focusIndex.value\n      let target: 'next' | 'prev' | 'first' | 'last' | number | null = null\n\n      if (![\n        'ArrowLeft',\n        'ArrowRight',\n        'Backspace',\n        'Delete',\n      ].includes(e.key)) return\n\n      e.preventDefault()\n\n      if (e.key === 'ArrowLeft') {\n        target = 'prev'\n      } else if (e.key === 'ArrowRight') {\n        target = 'next'\n      } else if (['Backspace', 'Delete'].includes(e.key)) {\n        array[focusIndex.value] = ''\n\n        model.value = array\n\n        if (focusIndex.value > 0 && e.key === 'Backspace') {\n          target = 'prev'\n        } else {\n          requestAnimationFrame(() => {\n            inputRef.value[index]?.select()\n          })\n        }\n      }\n\n      requestAnimationFrame(() => {\n        if (target != null) {\n          focusChild(contentRef.value!, target)\n        }\n      })\n    }\n\n    function onPaste (index: number, e: ClipboardEvent) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      const clipboardText = e?.clipboardData?.getData('Text').trim().slice(0, length.value) ?? ''\n\n      if (isValidNumber(clipboardText)) return\n\n      model.value = clipboardText.split('')\n\n      inputRef.value?.[index].blur()\n    }\n\n    function reset () {\n      model.value = []\n    }\n\n    function onFocus (e: FocusEvent, index: number) {\n      focus()\n\n      focusIndex.value = index\n    }\n\n    function onBlur () {\n      blur()\n\n      focusIndex.value = -1\n    }\n\n    function isValidNumber (value: string) {\n      return props.type === 'number' && /[^0-9]/g.test(value)\n    }\n\n    provideDefaults({\n      VField: {\n        color: toRef(() => props.color),\n        bgColor: toRef(() => props.color),\n        baseColor: toRef(() => props.baseColor),\n        disabled: toRef(() => props.disabled),\n        error: toRef(() => props.error),\n        variant: toRef(() => props.variant),\n      },\n    }, { scoped: true })\n\n    watch(model, val => {\n      if (val.length === length.value) {\n        focusIndex.value = length.value - 1\n        emit('finish', val.join(''))\n      }\n    }, { deep: true })\n\n    watch(focusIndex, val => {\n      if (val < 0) return\n\n      nextTick(() => {\n        inputRef.value[val]?.select()\n      })\n    })\n\n    useRender(() => {\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      return (\n        <div\n          class={[\n            'v-otp-input',\n            {\n              'v-otp-input--divided': !!props.divider,\n            },\n            props.class,\n          ]}\n          style={[\n            props.style,\n          ]}\n          { ...rootAttrs }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-otp-input__content\"\n            style={[\n              dimensionStyles.value,\n            ]}\n          >\n            { fields.value.map((_, i) => (\n              <>\n                { props.divider && i !== 0 && (\n                  <span class=\"v-otp-input__divider\">{ props.divider }</span>\n                )}\n\n                <VField\n                  focused={ (isFocused.value && props.focusAll) || focusIndex.value === i }\n                  key={ i }\n                >\n                  {{\n                    ...slots,\n                    loader: undefined,\n                    default: () => {\n                      return (\n                        <input\n                          ref={ val => inputRef.value[i] = val as HTMLInputElement }\n                          aria-label={ t(props.label, i + 1) }\n                          autofocus={ i === 0 && props.autofocus }\n                          autocomplete=\"one-time-code\"\n                          class={[\n                            'v-otp-input__field',\n                          ]}\n                          disabled={ props.disabled }\n                          inputmode={ props.type === 'number' ? 'numeric' : 'text' }\n                          min={ props.type === 'number' ? 0 : undefined }\n                          maxlength={ i === 0 ? length.value : '1' }\n                          placeholder={ props.placeholder }\n                          type={ props.type === 'number' ? 'text' : props.type }\n                          value={ model.value[i] }\n                          onInput={ onInput }\n                          onFocus={ e => onFocus(e, i) }\n                          onBlur={ onBlur }\n                          onKeydown={ onKeydown }\n                          onPaste={ event => onPaste(i, event) }\n                        />\n                      )\n                    },\n                  }}\n                </VField>\n              </>\n            ))}\n\n            <input\n              class=\"v-otp-input-input\"\n              type=\"hidden\"\n              { ...inputAttrs }\n              value={ model.value.join('') }\n            />\n\n            <VOverlay\n              contained\n              content-class=\"v-otp-input__loader\"\n              model-value={ !!props.loading }\n              persistent\n            >\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"24\"\n                  width=\"2\"\n                />\n              )}\n            </VOverlay>\n\n            { slots.default?.() }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      blur: () => {\n        inputRef.value?.some(input => input.blur())\n      },\n      focus: () => {\n        inputRef.value?.[0].focus()\n      },\n      reset,\n      isFocused,\n    }\n  },\n})\n\nexport type VOtpInput = InstanceType<typeof VOtpInput>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}