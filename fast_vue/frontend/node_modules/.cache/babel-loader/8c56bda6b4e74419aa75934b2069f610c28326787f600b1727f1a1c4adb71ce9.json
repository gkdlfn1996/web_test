{"ast":null,"code":"import _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { ref, watch } from 'vue';\nexport default {\n  __name: 'VersionTable',\n  props: {\n    versions: Array,\n    notes: Object,\n    // notesContent 객체 (초기값 및 외부 업데이트용)\n    notesComposable: Object,\n    // notes composable 전체를 받음\n    isSaving: Object // isSaving prop 타입을 Object로 변경\n  },\n  emits: ['save-note', 'input-note', 'refresh-versions'],\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose,\n      __emit = _ref.emit;\n    __expose();\n    var props = __props;\n    var emit = __emit; // emit 이벤트 추가\n\n    var versionHeaders = [{\n      title: 'Version',\n      key: 'code',\n      sortable: false\n    }, {\n      title: 'Note',\n      key: 'note',\n      sortable: false\n    }];\n\n    // 로컬 노트 내용을 저장할 반응형 객체\n    var localNotesContent = ref({});\n\n    // props.notes가 변경될 때 localNotesContent를 초기화\n    watch(function () {\n      return props.notes;\n    }, function (newNotes) {\n      localNotesContent.value = _objectSpread({}, newNotes);\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // 날짜 포맷팅 함수\n    var formatDateTime = function formatDateTime(isoString) {\n      if (!isoString) return '';\n      var date = new Date(isoString);\n      // ko-KR 로케일을 사용하여 'YYYY. MM. DD. HH:mm:ss' 형식으로 변환\n      return date.toLocaleString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      }).replace(/\\.\\s/g, '.').slice(0, -1); // 마지막 '.' 제거\n    };\n    var __returned__ = {\n      props: props,\n      emit: emit,\n      versionHeaders: versionHeaders,\n      localNotesContent: localNotesContent,\n      formatDateTime: formatDateTime,\n      ref: ref,\n      watch: watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","versionHeaders","title","key","sortable","localNotesContent","notes","newNotes","value","_objectSpread","immediate","deep","formatDateTime","isoString","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","replace","slice"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/components/VersionTable.vue"],"sourcesContent":["<!-- frontend/src/components/VersionTable.vue -->\n<template>\n  <div class=\"versions-section\" v-if=\"versions.length\">\n    <div class=\"d-flex align-center mb-2\">\n      <h2 class=\"mr-2\">Version</h2>\n      <v-btn icon=\"mdi-refresh\" size=\"small\" variant=\"text\" @click=\"emit('refresh-versions')\"></v-btn>\n    </div>\n    <v-data-table\n      :headers=\"versionHeaders\"\n      :items=\"versions\"\n      item-key=\"id\"\n      class=\"elevation-1\"\n      hide-default-footer\n      disable-pagination\n    >\n      <template v-slot:item.note=\"{ item }\">\n        <div class=\"note-section\">\n          <div class=\"my-note\">\n            <h3>My Draft Note ({{ item.code }})</h3>\n            <v-textarea\n              label=\"여기에 노트를 작성하세요\"\n              rows=\"3\"\n              v-model=\"localNotesContent[item.id]\"\n              @input=\"emit('input-note', item.id, localNotesContent[item.id])\"\n              @blur=\"emit('save-note', item.id, localNotesContent[item.id])\"\n              variant=\"outlined\"\n              :class=\"{ 'saving-note': !!isSaving[item.id] }\"\n            ></v-textarea>\n          </div>\n          <div class=\"other-notes mt-4\">\n            <div class=\"d-flex align-center mb-2\">\n            <h3>Others Draft Notes</h3>\n            <v-btn icon=\"mdi-refresh\" size=\"small\" variant=\"text\" @click=\"emit('reload-other-notes', item.id)\"></v-btn>\n            </div>\n            <v-card variant=\"outlined\" class=\"notes-container\">\n              <template v-if=\"notesComposable.otherNotes.value[item.id] && notesComposable.otherNotes.value[item.id].length\">\n                <div v-for=\"(note, index) in notesComposable.otherNotes.value[item.id]\" :key=\"note.id\">\n                  <div class=\"d-flex justify-space-between align-center px-2 pb-1\">\n                    <span class=\"text-subtitle-2 text-grey-darken-1\">{{ note.owner.username }}</span>\n                    <span class=\"text-caption text-right text-grey-darken-1\">{{ formatDateTime(note.updated_at) }}</span>\n                  </div>\n                  <v-card-text class=\"note-content text-body-2 pa-2\">\n                    {{ note.content }}\n                  </v-card-text>\n                  <v-divider v-if=\"index < notesComposable.otherNotes.value[item.id].length - 1\"></v-divider>\n                </div>\n              </template>\n              <v-card-text v-else>\n                다른 사용자의 노트가 없습니다.\n              </v-card-text>\n            </v-card>\n          </div>\n        </div>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  versions: Array,\n  notes: Object, // notesContent 객체 (초기값 및 외부 업데이트용)\n  notesComposable: Object, // notes composable 전체를 받음\n  isSaving: Object, // isSaving prop 타입을 Object로 변경\n});\n\nconst emit = defineEmits(['save-note', 'input-note', 'refresh-versions']); // emit 이벤트 추가\n\nconst versionHeaders = [\n  { title: 'Version', key: 'code', sortable: false },\n  { title: 'Note', key: 'note', sortable: false },\n];\n\n// 로컬 노트 내용을 저장할 반응형 객체\nconst localNotesContent = ref({});\n\n// props.notes가 변경될 때 localNotesContent를 초기화\nwatch(() => props.notes, (newNotes) => {\n  localNotesContent.value = { ...newNotes };\n}, { immediate: true, deep: true });\n\n// 날짜 포맷팅 함수\nconst formatDateTime = (isoString) => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  // ko-KR 로케일을 사용하여 'YYYY. MM. DD. HH:mm:ss' 형식으로 변환\n  return date.toLocaleString('ko-KR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false\n  }).replace(/\\.\\s/g, '.').slice(0, -1); // 마지막 '.' 제거\n};\n\n</script>\n\n<style scoped>\n/* v-textarea 컴포넌트에 saving-note 클래스가 있을 때, 내부의 v-field__field에 스타일 적용 */\n::v-deep .v-textarea.saving-note .v-field__field {\n  transition: background-color 0.5s ease-in-out; /* 트랜지션 시간 증가 */\n  background-color: #E0F2F7; /* 연한 파란색 배경 */\n}\n/* 저장 완료 후 원래 색상으로 돌아오도록 CSS 트랜지션 추가 */\n\n.notes-container {\n  height: 115px; /* v-textarea의 높이와 유사하게 설정 */\n  overflow-y: auto; /* 내용이 많아지면 스크롤바 표시 */\n}\n\n.note-content {\n  white-space: pre-wrap; /* 줄바꿈 및 공백 유지 */\n  word-wrap: break-word; /* 긴 단어가 영역을 벗어나지 않도록 줄바꿈 */\n  line-height: 1.4;\n}\n\n</style>"],"mappings":";;;;;;AA2DA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAK;;;;;;;;;;;;;;;;IAEhC,IAAMC,KAAK,GAAGC,OAKZ;IAEF,IAAMC,IAAI,GAAGC,MAA4D,CAAC,CAAC;;IAE3E,IAAMC,cAAc,GAAG,CACrB;MAAEC,KAAK,EAAE,SAAS;MAAEC,GAAG,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAClD;MAAEF,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAChD;;IAED;IACA,IAAMC,iBAAiB,GAAGV,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACAC,KAAK,CAAC;MAAA,OAAMC,KAAK,CAACS,KAAK;IAAA,GAAE,UAACC,QAAQ,EAAK;MACrCF,iBAAiB,CAACG,KAAK,GAAAC,aAAA,KAAQF,QAAQ,CAAE;IAC3C,CAAC,EAAE;MAAEG,SAAS,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;;IAEnC;IACA,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,SAAS,EAAK;MACpC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;MACzB,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;MAChC;MACA,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;QAClCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}