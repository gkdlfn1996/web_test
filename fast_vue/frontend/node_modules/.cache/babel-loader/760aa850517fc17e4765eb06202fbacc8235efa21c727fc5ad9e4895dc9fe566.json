{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Utilities\nimport { toValue } from 'vue';\nimport { destructComputed, getForeground, isCssColor, isParsableColor, parseColor } from \"../util/index.js\"; // Types\n// Composables\nexport function useColor(colors) {\n  return destructComputed(function () {\n    var _colors = toValue(colors);\n    var classes = [];\n    var styles = {};\n    if (_colors.background) {\n      if (isCssColor(_colors.background)) {\n        styles.backgroundColor = _colors.background;\n        if (!_colors.text && isParsableColor(_colors.background)) {\n          var backgroundColor = parseColor(_colors.background);\n          if (backgroundColor.a == null || backgroundColor.a === 1) {\n            var textColor = getForeground(backgroundColor);\n            styles.color = textColor;\n            styles.caretColor = textColor;\n          }\n        }\n      } else {\n        classes.push(\"bg-\".concat(_colors.background));\n      }\n    }\n    if (_colors.text) {\n      if (isCssColor(_colors.text)) {\n        styles.color = _colors.text;\n        styles.caretColor = _colors.text;\n      } else {\n        classes.push(\"text-\".concat(_colors.text));\n      }\n    }\n    return {\n      colorClasses: classes,\n      colorStyles: styles\n    };\n  });\n}\nexport function useTextColor(color) {\n  var _useColor = useColor(function () {\n      return {\n        text: toValue(color)\n      };\n    }),\n    textColorClasses = _useColor.colorClasses,\n    textColorStyles = _useColor.colorStyles;\n  return {\n    textColorClasses: textColorClasses,\n    textColorStyles: textColorStyles\n  };\n}\nexport function useBackgroundColor(color) {\n  var _useColor2 = useColor(function () {\n      return {\n        background: toValue(color)\n      };\n    }),\n    backgroundColorClasses = _useColor2.colorClasses,\n    backgroundColorStyles = _useColor2.colorStyles;\n  return {\n    backgroundColorClasses: backgroundColorClasses,\n    backgroundColorStyles: backgroundColorStyles\n  };\n}","map":{"version":3,"names":["toValue","destructComputed","getForeground","isCssColor","isParsableColor","parseColor","useColor","colors","_colors","classes","styles","background","backgroundColor","text","a","textColor","color","caretColor","push","concat","colorClasses","colorStyles","useTextColor","_useColor","textColorClasses","textColorStyles","useBackgroundColor","_useColor2","backgroundColorClasses","backgroundColorStyles"],"sources":["../../src/composables/color.ts"],"sourcesContent":["// Utilities\nimport { toValue } from 'vue'\nimport { destructComputed, getForeground, isCssColor, isParsableColor, parseColor } from '@/util'\n\n// Types\nimport type { CSSProperties, MaybeRefOrGetter, Ref } from 'vue'\n\ntype ColorValue = string | false | null | undefined\n\nexport interface TextColorData {\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n}\n\nexport interface BackgroundColorData {\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n}\n\n// Composables\nexport function useColor (colors: MaybeRefOrGetter<{ background?: ColorValue, text?: ColorValue }>) {\n  return destructComputed(() => {\n    const _colors = toValue(colors)\n    const classes: string[] = []\n    const styles: CSSProperties = {}\n\n    if (_colors.background) {\n      if (isCssColor(_colors.background)) {\n        styles.backgroundColor = _colors.background\n\n        if (!_colors.text && isParsableColor(_colors.background)) {\n          const backgroundColor = parseColor(_colors.background)\n          if (backgroundColor.a == null || backgroundColor.a === 1) {\n            const textColor = getForeground(backgroundColor)\n\n            styles.color = textColor\n            styles.caretColor = textColor\n          }\n        }\n      } else {\n        classes.push(`bg-${_colors.background}`)\n      }\n    }\n\n    if (_colors.text) {\n      if (isCssColor(_colors.text)) {\n        styles.color = _colors.text\n        styles.caretColor = _colors.text\n      } else {\n        classes.push(`text-${_colors.text}`)\n      }\n    }\n\n    return { colorClasses: classes, colorStyles: styles }\n  })\n}\n\nexport function useTextColor (color: MaybeRefOrGetter<ColorValue>): TextColorData {\n  const {\n    colorClasses: textColorClasses,\n    colorStyles: textColorStyles,\n  } = useColor(() => ({\n    text: toValue(color),\n  }))\n\n  return { textColorClasses, textColorStyles }\n}\n\nexport function useBackgroundColor (color: MaybeRefOrGetter<ColorValue>): BackgroundColorData {\n  const {\n    colorClasses: backgroundColorClasses,\n    colorStyles: backgroundColorStyles,\n  } = useColor(() => ({\n    background: toValue(color),\n  }))\n\n  return { backgroundColorClasses, backgroundColorStyles }\n}\n"],"mappings":";AAAA;AACA,SAASA,OAAO,QAAQ,KAAK;AAAA,SACpBC,gBAAgB,EAAEC,aAAa,EAAEC,UAAU,EAAEC,eAAe,EAAEC,UAAU,4BAEjF;AAeA;AACA,OAAO,SAASC,QAAQA,CAAEC,MAAwE,EAAE;EAClG,OAAON,gBAAgB,CAAC,YAAM;IAC5B,IAAMO,OAAO,GAAGR,OAAO,CAACO,MAAM,CAAC;IAC/B,IAAME,OAAiB,GAAG,EAAE;IAC5B,IAAMC,MAAqB,GAAG,CAAC,CAAC;IAEhC,IAAIF,OAAO,CAACG,UAAU,EAAE;MACtB,IAAIR,UAAU,CAACK,OAAO,CAACG,UAAU,CAAC,EAAE;QAClCD,MAAM,CAACE,eAAe,GAAGJ,OAAO,CAACG,UAAU;QAE3C,IAAI,CAACH,OAAO,CAACK,IAAI,IAAIT,eAAe,CAACI,OAAO,CAACG,UAAU,CAAC,EAAE;UACxD,IAAMC,eAAe,GAAGP,UAAU,CAACG,OAAO,CAACG,UAAU,CAAC;UACtD,IAAIC,eAAe,CAACE,CAAC,IAAI,IAAI,IAAIF,eAAe,CAACE,CAAC,KAAK,CAAC,EAAE;YACxD,IAAMC,SAAS,GAAGb,aAAa,CAACU,eAAe,CAAC;YAEhDF,MAAM,CAACM,KAAK,GAAGD,SAAS;YACxBL,MAAM,CAACO,UAAU,GAAGF,SAAS;UAC/B;QACF;MACF,CAAC,MAAM;QACLN,OAAO,CAACS,IAAI,OAAAC,MAAA,CAAOX,OAAO,CAACG,UAAU,CAAE,CAAC;MAC1C;IACF;IAEA,IAAIH,OAAO,CAACK,IAAI,EAAE;MAChB,IAAIV,UAAU,CAACK,OAAO,CAACK,IAAI,CAAC,EAAE;QAC5BH,MAAM,CAACM,KAAK,GAAGR,OAAO,CAACK,IAAI;QAC3BH,MAAM,CAACO,UAAU,GAAGT,OAAO,CAACK,IAAI;MAClC,CAAC,MAAM;QACLJ,OAAO,CAACS,IAAI,SAAAC,MAAA,CAASX,OAAO,CAACK,IAAI,CAAE,CAAC;MACtC;IACF;IAEA,OAAO;MAAEO,YAAY,EAAEX,OAAO;MAAEY,WAAW,EAAEX;IAAO,CAAC;EACvD,CAAC,CAAC;AACJ;AAEA,OAAO,SAASY,YAAYA,CAAEN,KAAmC,EAAiB;EAChF,IAAAO,SAAA,GAGIjB,QAAQ,CAAC;MAAA,OAAO;QAClBO,IAAI,EAAEb,OAAO,CAACgB,KAAK;MACrB,CAAC;IAAA,CAAC,CAAC;IAJaQ,gBAAgB,GAAAD,SAAA,CAA9BH,YAAY;IACCK,eAAA,GAAAF,SAAA,CAAbF,WAAW;EAKb,OAAO;IAAEG,gBAAgB,EAAhBA,gBAAgB;IAAEC,eAAA,EAAAA;EAAgB,CAAC;AAC9C;AAEA,OAAO,SAASC,kBAAkBA,CAAEV,KAAmC,EAAuB;EAC5F,IAAAW,UAAA,GAGIrB,QAAQ,CAAC;MAAA,OAAO;QAClBK,UAAU,EAAEX,OAAO,CAACgB,KAAK;MAC3B,CAAC;IAAA,CAAC,CAAC;IAJaY,sBAAsB,GAAAD,UAAA,CAApCP,YAAY;IACCS,qBAAA,GAAAF,UAAA,CAAbN,WAAW;EAKb,OAAO;IAAEO,sBAAsB,EAAtBA,sBAAsB;IAAEC,qBAAA,EAAAA;EAAsB,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}