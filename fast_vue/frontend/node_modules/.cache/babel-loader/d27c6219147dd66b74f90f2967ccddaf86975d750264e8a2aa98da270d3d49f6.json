{"ast":null,"code":"import _defineProperty from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport { Fragment as _Fragment, createVNode as _createVNode, createElementVNode as _createElementVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\";\n// Styles\nimport \"./VSelect.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.js\";\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\";\nimport { VChip } from \"../VChip/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VList, VListItem } from \"../VList/index.js\";\nimport { VMenu } from \"../VMenu/index.js\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.js\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.js\"; // Composables\nimport { useScrolling } from \"./useScrolling.js\";\nimport { useForm } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { IconValue } from \"../../composables/icons.js\";\nimport { makeItemsProps, useItems } from \"../../composables/list-items.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTransitionProps } from \"../../composables/transition.js\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, toRef, watch } from 'vue';\nimport { camelizeProps, checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\nexport var makeSelectProps = propsFactory(_objectSpread({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    \"default\": '$vuetify.close'\n  },\n  openText: {\n    type: String,\n    \"default\": '$vuetify.open'\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    \"default\": '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    \"default\": '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  itemColor: String\n}, makeItemsProps({\n  itemChildren: false\n})), 'Select');\nexport var makeVSelectProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({}, makeSelectProps()), omit(makeVTextFieldProps({\n  modelValue: null,\n  role: 'combobox'\n}), ['validationValue', 'dirty', 'appendInnerIcon'])), makeTransitionProps({\n  transition: {\n    component: VDialogTransition\n  }\n})), 'VSelect');\nexport var VSelect = genericComponent()({\n  name: 'VSelect',\n  props: makeVSelectProps(),\n  emits: {\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    'update:menu': function updateMenu(ue) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var vTextFieldRef = ref();\n    var vMenuRef = ref();\n    var vVirtualScrollRef = ref();\n    var _useItems = useItems(props),\n      items = _useItems.items,\n      transformIn = _useItems.transformIn,\n      transformOut = _useItems.transformOut;\n    var model = useProxiedModel(props, 'modelValue', [], function (v) {\n      return transformIn(v === null ? [null] : wrapInArray(v));\n    }, function (v) {\n      var _transformed$;\n      var transformed = transformOut(v);\n      return props.multiple ? transformed : (_transformed$ = transformed[0]) !== null && _transformed$ !== void 0 ? _transformed$ : null;\n    });\n    var counterValue = computed(function () {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    var form = useForm(props);\n    var selectedValues = computed(function () {\n      return model.value.map(function (selection) {\n        return selection.value;\n      });\n    });\n    var isFocused = shallowRef(false);\n    var keyboardLookupPrefix = '';\n    var keyboardLookupIndex = -1;\n    var keyboardLookupLastTime;\n    var displayItems = computed(function () {\n      if (props.hideSelected) {\n        return items.value.filter(function (item) {\n          return !model.value.some(function (s) {\n            return (props.valueComparator || deepEqual)(s, item);\n          });\n        });\n      }\n      return items.value;\n    });\n    var menuDisabled = computed(function () {\n      return props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value;\n    });\n    var _menu = useProxiedModel(props, 'menu');\n    var menu = computed({\n      get: function get() {\n        return _menu.value;\n      },\n      set: function set(v) {\n        var _vMenuRef$value;\n        if (_menu.value && !v && (_vMenuRef$value = vMenuRef.value) !== null && _vMenuRef$value !== void 0 && _vMenuRef$value.Î¨openChildren.size) return;\n        if (v && menuDisabled.value) return;\n        _menu.value = v;\n      }\n    });\n    var label = toRef(function () {\n      return menu.value ? props.closeText : props.openText;\n    });\n    var computedMenuProps = computed(function () {\n      var _props$menuProps;\n      return _objectSpread(_objectSpread({}, props.menuProps), {}, {\n        activatorProps: _objectSpread(_objectSpread({}, ((_props$menuProps = props.menuProps) === null || _props$menuProps === void 0 ? void 0 : _props$menuProps.activatorProps) || {}), {}, {\n          'aria-haspopup': 'listbox' // Set aria-haspopup to 'listbox'\n        })\n      });\n    });\n    var listRef = ref();\n    var listEvents = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = !menu.value;\n    }\n    function onListKeydown(e) {\n      if (checkPrintable(e)) {\n        onKeydown(e);\n      }\n    }\n    function onKeydown(e) {\n      var _listRef$value3;\n      if (!e.key || form.isReadonly.value) return;\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === 'Home') {\n        var _listRef$value;\n        (_listRef$value = listRef.value) === null || _listRef$value === void 0 || _listRef$value.focus('first');\n      } else if (e.key === 'End') {\n        var _listRef$value2;\n        (_listRef$value2 = listRef.value) === null || _listRef$value2 === void 0 || _listRef$value2.focus('last');\n      }\n\n      // html select hotkeys\n      var KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      if (!checkPrintable(e)) return;\n      var now = performance.now();\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = '';\n        keyboardLookupIndex = -1;\n      }\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      var items = displayItems.value;\n      function findItem() {\n        var result = findItemBase();\n        if (result) return result;\n        if (keyboardLookupPrefix.at(-1) === keyboardLookupPrefix.at(-2)) {\n          // No matches but we have a repeated letter, try the next item with that prefix\n          keyboardLookupPrefix = keyboardLookupPrefix.slice(0, -1);\n          result = findItemBase();\n          if (result) return result;\n        }\n\n        // Still nothing, wrap around to the top\n        keyboardLookupIndex = -1;\n        result = findItemBase();\n        if (result) return result;\n\n        // Still nothing, try just the new letter\n        keyboardLookupPrefix = e.key.toLowerCase();\n        return findItemBase();\n      }\n      function findItemBase() {\n        for (var i = keyboardLookupIndex + 1; i < items.length; i++) {\n          var _item = items[i];\n          if (_item.title.toLowerCase().startsWith(keyboardLookupPrefix)) {\n            return [_item, i];\n          }\n        }\n        return undefined;\n      }\n      var result = findItem();\n      if (!result) return;\n      var _result = _slicedToArray(result, 2),\n        item = _result[0],\n        index = _result[1];\n      keyboardLookupIndex = index;\n      (_listRef$value3 = listRef.value) === null || _listRef$value3 === void 0 || _listRef$value3.focus(index);\n      if (!props.multiple) {\n        model.value = [item];\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select(item) {\n      var set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (item.props.disabled) return;\n      if (props.multiple) {\n        var index = model.value.findIndex(function (selection) {\n          return (props.valueComparator || deepEqual)(selection.value, item.value);\n        });\n        var add = set == null ? !~index : set;\n        if (~index) {\n          var value = add ? [].concat(_toConsumableArray(model.value), [item]) : _toConsumableArray(model.value);\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [].concat(_toConsumableArray(model.value), [item]);\n        }\n      } else {\n        var _add = set !== false;\n        model.value = _add ? [item] : [];\n        nextTick(function () {\n          menu.value = false;\n        });\n      }\n    }\n    function onBlur(e) {\n      var _listRef$value4;\n      if (!((_listRef$value4 = listRef.value) !== null && _listRef$value4 !== void 0 && _listRef$value4.$el.contains(e.relatedTarget))) {\n        menu.value = false;\n      }\n    }\n    function onAfterEnter() {\n      if (props.eager) {\n        var _vVirtualScrollRef$va;\n        (_vVirtualScrollRef$va = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va === void 0 || _vVirtualScrollRef$va.calculateVisibleItems();\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        var _vTextFieldRef$value;\n        (_vTextFieldRef$value = vTextFieldRef.value) === null || _vTextFieldRef$value === void 0 || _vTextFieldRef$value.focus();\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onModelUpdate(v) {\n      if (v == null) model.value = [];else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        var item = items.value.find(function (item) {\n          return item.title === v;\n        });\n        if (item) {\n          select(item);\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = '';\n      }\n    }\n    watch(menu, function () {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        var index = displayItems.value.findIndex(function (item) {\n          return model.value.some(function (s) {\n            return (props.valueComparator || deepEqual)(s.value, item.value);\n          });\n        });\n        IN_BROWSER && window.requestAnimationFrame(function () {\n          var _vVirtualScrollRef$va2;\n          index >= 0 && ((_vVirtualScrollRef$va2 = vVirtualScrollRef.value) === null || _vVirtualScrollRef$va2 === void 0 ? void 0 : _vVirtualScrollRef$va2.scrollToIndex(index));\n        });\n      }\n    });\n    watch(function () {\n      return props.items;\n    }, function (newVal, oldVal) {\n      if (menu.value) return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(function () {\n      var hasChips = !!(props.chips || slots.chip);\n      var hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      var isDirty = model.value.length > 0;\n      var textFieldProps = VTextField.filterProps(props);\n      var placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(function (v) {\n          return v.props.value;\n        }).join(', '),\n        \"onUpdate:modelValue\": onModelUpdate,\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": function onUpdateFocused($event) {\n          return isFocused.value = $event;\n        },\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-select', _defineProperty(_defineProperty(_defineProperty({\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips\n        }, \"v-select--\".concat(props.multiple ? 'multiple' : 'single'), true), 'v-select--selected', model.value.length), 'v-select--selection-slot', !!slots.selection), props[\"class\"]],\n        \"style\": props.style,\n        \"inputmode\": \"none\",\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown,\n        \"aria-label\": t(label.value),\n        \"title\": t(label.value)\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default() {\n          return _createElementVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n            \"ref\": vMenuRef,\n            \"modelValue\": menu.value,\n            \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n              return menu.value = $event;\n            },\n            \"activator\": \"parent\",\n            \"contentClass\": \"v-select__content\",\n            \"disabled\": menuDisabled.value,\n            \"eager\": props.eager,\n            \"maxHeight\": 310,\n            \"openOnClick\": false,\n            \"closeOnContentClick\": false,\n            \"transition\": props.transition,\n            \"onAfterEnter\": onAfterEnter,\n            \"onAfterLeave\": onAfterLeave\n          }, computedMenuProps.value), {\n            \"default\": function _default() {\n              var _props$itemColor;\n              return [hasList && _createVNode(VList, _mergeProps({\n                \"ref\": listRef,\n                \"selected\": selectedValues.value,\n                \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n                \"onMousedown\": function onMousedown(e) {\n                  return e.preventDefault();\n                },\n                \"onKeydown\": onListKeydown,\n                \"onFocusin\": onFocusin,\n                \"tabindex\": \"-1\",\n                \"aria-live\": \"polite\",\n                \"aria-label\": \"\".concat(props.label, \"-list\"),\n                \"color\": (_props$itemColor = props.itemColor) !== null && _props$itemColor !== void 0 ? _props$itemColor : props.color\n              }, listEvents, props.listProps), {\n                \"default\": function _default() {\n                  var _slots$prependItem, _slots$noData, _slots$noData2, _slots$appendItem;\n                  return [(_slots$prependItem = slots['prepend-item']) === null || _slots$prependItem === void 0 ? void 0 : _slots$prependItem.call(slots), !displayItems.value.length && !props.hideNoData && ((_slots$noData = (_slots$noData2 = slots['no-data']) === null || _slots$noData2 === void 0 ? void 0 : _slots$noData2.call(slots)) !== null && _slots$noData !== void 0 ? _slots$noData : _createVNode(VListItem, {\n                    \"key\": \"no-data\",\n                    \"title\": t(props.noDataText)\n                  }, null)), _createVNode(VVirtualScroll, {\n                    \"ref\": vVirtualScrollRef,\n                    \"renderless\": true,\n                    \"items\": displayItems.value,\n                    \"itemKey\": \"value\"\n                  }, {\n                    \"default\": function _default(_ref2) {\n                      var _slots$item, _slots$item2;\n                      var item = _ref2.item,\n                        index = _ref2.index,\n                        itemRef = _ref2.itemRef;\n                      var camelizedProps = camelizeProps(item.props);\n                      var itemProps = mergeProps(item.props, {\n                        ref: itemRef,\n                        key: item.value,\n                        onClick: function onClick() {\n                          return select(item, null);\n                        }\n                      });\n                      return (_slots$item = (_slots$item2 = slots.item) === null || _slots$item2 === void 0 ? void 0 : _slots$item2.call(slots, {\n                        item: item,\n                        index: index,\n                        props: itemProps\n                      })) !== null && _slots$item !== void 0 ? _slots$item : _createVNode(VListItem, _mergeProps(itemProps, {\n                        \"role\": \"option\"\n                      }), {\n                        prepend: function prepend(_ref3) {\n                          var isSelected = _ref3.isSelected;\n                          return _createElementVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                            \"key\": item.value,\n                            \"modelValue\": isSelected,\n                            \"ripple\": false,\n                            \"tabindex\": \"-1\"\n                          }, null) : undefined, camelizedProps.prependAvatar && _createVNode(VAvatar, {\n                            \"image\": camelizedProps.prependAvatar\n                          }, null), camelizedProps.prependIcon && _createVNode(VIcon, {\n                            \"icon\": camelizedProps.prependIcon\n                          }, null)]);\n                        }\n                      });\n                    }\n                  }), (_slots$appendItem = slots['append-item']) === null || _slots$appendItem === void 0 ? void 0 : _slots$appendItem.call(slots)];\n                }\n              })];\n            }\n          }), model.value.map(function (item, index) {\n            function onChipClose(e) {\n              e.stopPropagation();\n              e.preventDefault();\n              select(item, false);\n            }\n            var slotProps = {\n              'onClick:close': onChipClose,\n              onKeydown: function onKeydown(e) {\n                if (e.key !== 'Enter' && e.key !== ' ') return;\n                e.preventDefault();\n                e.stopPropagation();\n                onChipClose(e);\n              },\n              onMousedown: function onMousedown(e) {\n                e.preventDefault();\n                e.stopPropagation();\n              },\n              modelValue: true,\n              'onUpdate:modelValue': undefined\n            };\n            var hasSlot = hasChips ? !!slots.chip : !!slots.selection;\n            var slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\n              item: item,\n              index: index,\n              props: slotProps\n            }) : slots.selection({\n              item: item,\n              index: index\n            })) : undefined;\n            if (hasSlot && !slotContent) return undefined;\n            return _createElementVNode(\"div\", {\n              \"key\": item.value,\n              \"class\": \"v-select__selection\"\n            }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n              \"key\": \"chip\",\n              \"closable\": props.closableChips,\n              \"size\": \"small\",\n              \"text\": item.title,\n              \"disabled\": item.props.disabled\n            }, slotProps), null) : _createVNode(VDefaultsProvider, {\n              \"key\": \"chip-defaults\",\n              \"defaults\": {\n                VChip: {\n                  closable: props.closableChips,\n                  size: 'small',\n                  text: item.title\n                }\n              }\n            }, {\n              \"default\": function _default() {\n                return [slotContent];\n              }\n            }) : slotContent !== null && slotContent !== void 0 ? slotContent : _createElementVNode(\"span\", {\n              \"class\": \"v-select__selection-text\"\n            }, [item.title, props.multiple && index < model.value.length - 1 && _createElementVNode(\"span\", {\n              \"class\": \"v-select__selection-comma\"\n            }, [_createTextVNode(\",\")])])]);\n          })]);\n        },\n        'append-inner': function appendInner() {\n          var _slots$appendInner, _vTextFieldRef$value2;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createElementVNode(_Fragment, null, [(_slots$appendInner = slots['append-inner']) === null || _slots$appendInner === void 0 ? void 0 : _slots$appendInner.call.apply(_slots$appendInner, [slots].concat(args)), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-select__menu-icon\",\n            \"color\": (_vTextFieldRef$value2 = vTextFieldRef.value) === null || _vTextFieldRef$value2 === void 0 ? void 0 : _vTextFieldRef$value2.fieldIconColor,\n            \"icon\": props.menuIcon\n          }, null) : undefined]);\n        }\n      }));\n    });\n    return forwardRefs({\n      isFocused: isFocused,\n      menu: menu,\n      select: select\n    }, vTextFieldRef);\n  }\n});","map":{"version":3,"names":["VDialogTransition","VAvatar","VCheckboxBtn","VChip","VDefaultsProvider","VIcon","VList","VListItem","VMenu","makeVTextFieldProps","VTextField","VVirtualScroll","useScrolling","useForm","forwardRefs","IconValue","makeItemsProps","useItems","useLocale","useProxiedModel","makeTransitionProps","computed","mergeProps","nextTick","ref","shallowRef","toRef","watch","camelizeProps","checkPrintable","deepEqual","ensureValidVNode","genericComponent","IN_BROWSER","matchesSelector","omit","propsFactory","useRender","wrapInArray","makeSelectProps","_objectSpread","chips","Boolean","closableChips","closeText","type","String","openText","eager","hideNoData","hideSelected","listProps","Object","menu","menuIcon","menuProps","multiple","noDataText","openOnClear","itemColor","itemChildren","makeVSelectProps","modelValue","role","transition","component","VSelect","name","props","emits","updateFocused","focused","updateModelValue","value","updateMenu","ue","setup","_ref","slots","_useLocale","t","vTextFieldRef","vMenuRef","vVirtualScrollRef","_useItems","items","transformIn","transformOut","model","v","_transformed$","transformed","counterValue","length","form","selectedValues","map","selection","isFocused","keyboardLookupPrefix","keyboardLookupIndex","keyboardLookupLastTime","displayItems","filter","item","some","s","valueComparator","menuDisabled","isReadonly","isDisabled","_menu","get","set","_vMenuRef$value","Î¨openChildren","size","label","computedMenuProps","_props$menuProps","activatorProps","listRef","listEvents","onClear","e","onMousedownControl","onListKeydown","onKeydown","_listRef$value3","key","includes","preventDefault","_listRef$value","focus","_listRef$value2","KEYBOARD_LOOKUP_THRESHOLD","now","performance","toLowerCase","findItem","result","findItemBase","at","slice","i","_item","title","startsWith","undefined","_result","_slicedToArray","index","select","arguments","disabled","findIndex","add","concat","_toConsumableArray","splice","onBlur","_listRef$value4","$el","contains","relatedTarget","onAfterEnter","_vVirtualScrollRef$va","calculateVisibleItems","onAfterLeave","_vTextFieldRef$value","onFocusin","onModelUpdate","find","window","requestAnimationFrame","_vVirtualScrollRef$va2","scrollToIndex","newVal","oldVal","hasChips","chip","hasList","isDirty","textFieldProps","filterProps","placeholder","persistentPlaceholder","_createVNode","_mergeProps","join","onUpdateFocused","$event","externalValue","_defineProperty","style","default","_createElementVNode","_Fragment","onUpdateModelValue","_props$itemColor","onMousedown","color","_slots$prependItem","_slots$noData","_slots$noData2","_slots$appendItem","call","_ref2","_slots$item","_slots$item2","itemRef","camelizedProps","itemProps","onClick","prepend","_ref3","isSelected","prependAvatar","prependIcon","onChipClose","stopPropagation","slotProps","hasSlot","slotContent","closable","text","_createTextVNode","appendInner","_slots$appendInner","_vTextFieldRef$value2","_len","args","Array","_key","apply","fieldIconColor"],"sources":["../../../src/components/VSelect/VSelect.tsx"],"sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, toRef, watch } from 'vue'\nimport {\n  camelizeProps,\n  checkPrintable,\n  deepEqual,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupIndex = -1\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => (props.valueComparator || deepEqual)(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren.size) return\n        if (v && menuDisabled.value) return\n        _menu.value = v\n      },\n    })\n\n    const label = toRef(() => menu.value ? props.closeText : props.openText)\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (!checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n        keyboardLookupIndex = -1\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const items = displayItems.value\n      function findItem () {\n        let result = findItemBase()\n        if (result) return result\n\n        if (keyboardLookupPrefix.at(-1) === keyboardLookupPrefix.at(-2)) {\n          // No matches but we have a repeated letter, try the next item with that prefix\n          keyboardLookupPrefix = keyboardLookupPrefix.slice(0, -1)\n          result = findItemBase()\n          if (result) return result\n        }\n\n        // Still nothing, wrap around to the top\n        keyboardLookupIndex = -1\n        result = findItemBase()\n        if (result) return result\n\n        // Still nothing, try just the new letter\n        keyboardLookupPrefix = e.key.toLowerCase()\n        return findItemBase()\n      }\n      function findItemBase () {\n        for (let i = keyboardLookupIndex + 1; i < items.length; i++) {\n          const _item = items[i]\n          if (_item.title.toLowerCase().startsWith(keyboardLookupPrefix)) {\n            return [_item, i] as const\n          }\n        }\n        return undefined\n      }\n\n      const result = findItem()\n      if (!result) return\n\n      const [item, index] = result\n      keyboardLookupIndex = index\n      listRef.value?.focus(index)\n      if (!props.multiple) {\n        model.value = [item]\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => (props.valueComparator || deepEqual)(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      aria-label={ `${props.label}-list` }\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value } itemKey=\"value\">\n                        { ({ item, index, itemRef }) => {\n                          const camelizedProps = camelizeProps(item.props)\n\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { camelizedProps.prependAvatar && (\n                                      <VAvatar image={ camelizedProps.prependAvatar } />\n                                    )}\n\n                                    { camelizedProps.prependIcon && (\n                                      <VIcon icon={ camelizedProps.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    color={ vTextFieldRef.value?.fieldIconColor }\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}