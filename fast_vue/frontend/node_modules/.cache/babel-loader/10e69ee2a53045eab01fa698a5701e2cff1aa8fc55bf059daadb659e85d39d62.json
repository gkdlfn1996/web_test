{"ast":null,"code":"import _regenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { onMounted } from 'vue'; // onMounted는 App.vue에서 직접 사용\nimport useAuth from './composables/useAuth'; // 인증 로직\nimport useShotGridData from './composables/useShotGridData'; // ShotGrid 데이터 로직\nimport useNotes from './composables/useNotes'; // 노트 로직\nimport { fetchVersionsForShot } from './api'; // API 호출 함수\n\nimport LoginSection from './components/LoginSection.vue'; // 로그인 컴포넌트\nimport ShotSelector from './components/ShotSelector.vue'; // 샷 선택 컴포넌트\nimport VersionTable from './components/VersionTable.vue'; // 버전 테이블 컴포넌트\n\nexport default {\n  components: {\n    LoginSection: LoginSection,\n    ShotSelector: ShotSelector,\n    VersionTable: VersionTable\n  },\n  setup: function setup() {\n    var auth = useAuth();\n    var shotGridData = useShotGridData();\n    var notes = useNotes(auth.loggedInUserId);\n\n    // App.vue의 onMounted 로직\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var storedUser, user;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            storedUser = sessionStorage.getItem('loggedInUser');\n            if (storedUser) {\n              user = JSON.parse(storedUser);\n              auth.loggedInUser.value = user.name; // useAuth의 loggedInUser 업데이트\n              auth.loggedInUserId.value = user.id; // useAuth의 loggedInUserId 업데이트\n            }\n            _context.n = 1;\n            return shotGridData.loadProjects();\n          case 1:\n            return _context.a(2);\n        }\n      }, _callee);\n    })));\n\n    // loadVersions 함수는 App.vue에서 직접 관리 (ShotGridData와 Notes를 연결)\n    var loadVersions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var selectedShot, versionData, loadedVersions, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.p = 0;\n              selectedShot = shotGridData.shots.value.find(function (s) {\n                return s.code === shotGridData.selectedShotName.value;\n              });\n              if (selectedShot) {\n                _context2.n = 1;\n                break;\n              }\n              return _context2.a(2);\n            case 1:\n              _context2.n = 2;\n              return fetchVersionsForShot(selectedShot.id);\n            case 2:\n              versionData = _context2.v;\n              loadedVersions = versionData.versions || []; // useNotes의 loadVersionNotes 함수를 호출하여 노트 데이터 로딩\n              _context2.n = 3;\n              return notes.loadVersionNotes(loadedVersions);\n            case 3:\n              // 모든 데이터가 준비되면 버전 목록 업데이트 (UI 렌더링 유발)\n              shotGridData.setVersions(loadedVersions);\n              _context2.n = 5;\n              break;\n            case 4:\n              _context2.p = 4;\n              _t = _context2.v;\n              console.error(\"Error loading versions and notes:\", _t);\n              // 사용자에게 에러를 알리는 로직을 추가할 수 있습니다.\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 4]]);\n      }));\n      return function loadVersions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Clear 함수 (App.vue에서 직접 관리)\n    var clear = function clear() {\n      // useShotGridData의 clear 로직을 호출\n      shotGridData.projectName.value = '';\n      shotGridData.shots.value = [];\n      shotGridData.versions.value = [];\n      shotGridData.selectedShotName.value = '';\n      auth.loginError.value = null;\n      notes.notesContent.value = {}; // 노트 내용도 초기화\n    };\n    return {\n      // useAuth에서 노출된 속성/함수\n      username: auth.username,\n      password: auth.password,\n      loggedInUser: auth.loggedInUser,\n      loginError: auth.loginError,\n      login: auth.login,\n      // useShotGridData에서 노출된 속성/함수\n      projectName: shotGridData.projectName,\n      projects: shotGridData.projects,\n      shots: shotGridData.shots,\n      selectedShotName: shotGridData.selectedShotName,\n      versions: shotGridData.versions,\n      onProjectSelected: shotGridData.onProjectSelected,\n      // useNotes에서 노출된 속성/함수\n      notesContent: notes.notesContent,\n      // notesContent ref 자체를 전달\n      isSaving: notes.isSaving,\n      // isSaving 상태 노출\n      saveNote: function () {\n        var _saveNote = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(versionId, content) {\n          var savedContent;\n          return _regenerator().w(function (_context3) {\n            while (1) switch (_context3.n) {\n              case 0:\n                _context3.n = 1;\n                return notes.saveNote(versionId, content);\n              case 1:\n                savedContent = _context3.v;\n                if (savedContent !== null) {\n                  // 저장 성공 시에만 업데이트\n                  notes.notesContent.value[versionId] = savedContent;\n                }\n              case 2:\n                return _context3.a(2);\n            }\n          }, _callee3);\n        }));\n        function saveNote(_x, _x2) {\n          return _saveNote.apply(this, arguments);\n        }\n        return saveNote;\n      }(),\n      // App.vue에서 직접 관리하는 속성/함수\n      loadVersions: loadVersions,\n      clear: clear\n    };\n  }\n};","map":{"version":3,"names":["onMounted","useAuth","useShotGridData","useNotes","fetchVersionsForShot","LoginSection","ShotSelector","VersionTable","components","setup","auth","shotGridData","notes","loggedInUserId","_asyncToGenerator","_regenerator","m","_callee","storedUser","user","w","_context","n","sessionStorage","getItem","JSON","parse","loggedInUser","value","name","id","loadProjects","a","loadVersions","_ref2","_callee2","selectedShot","versionData","loadedVersions","_t","_context2","p","shots","find","s","code","selectedShotName","v","versions","loadVersionNotes","setVersions","console","error","apply","arguments","clear","projectName","loginError","notesContent","username","password","login","projects","onProjectSelected","isSaving","saveNote","_saveNote","_callee3","versionId","content","savedContent","_context3","_x","_x2"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <!-- 로그인 섹션 (로그인되지 않았을 때만 표시) -->\n      <LoginSection\n        v-if=\"!loggedInUser\"\n        :username=\"username\"\n        :password=\"password\"\n        :loginError=\"loginError\"\n        @update:username=\"username = $event\"\n        @update:password=\"password = $event\"\n        @login=\"login\"\n      />\n\n      <!-- 로그인 성공 시 표시되는 메인 UI -->\n      <v-container fluid v-else-if=\"loggedInUser\" :class=\"{'mt-5': loggedInUser}\">\n        <v-alert type=\"success\" dense text class=\"mb-5\">\n          <span>환영합니다, {{ loggedInUser }}!</span>\n        </v-alert>\n\n        <!-- 샷 선택 컴포넌트 -->\n        <ShotSelector\n          :projectName=\"projectName\"\n          :projects=\"projects\"\n          :shots=\"shots\"\n          :selectedShotName=\"selectedShotName\"\n          @update:projectName=\"projectName = $event\"\n          @update:selectedShotName=\"selectedShotName = $event\"\n          @onProjectSelected=\"onProjectSelected\"\n          @loadVersions=\"loadVersions\"\n          @clear=\"clear\"\n        />\n\n        <!-- 버전 테이블 컴포넌트 -->\n        <VersionTable\n          :versions=\"versions\"\n          :notes=\"notesContent\"\n          :isSaving=\"notes.isSaving\"\n          @save-note=\"saveNote\"\n        />\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { onMounted } from 'vue'; // onMounted는 App.vue에서 직접 사용\nimport useAuth from './composables/useAuth'; // 인증 로직\nimport useShotGridData from './composables/useShotGridData'; // ShotGrid 데이터 로직\nimport useNotes from './composables/useNotes'; // 노트 로직\nimport { fetchVersionsForShot } from './api'; // API 호출 함수\n\nimport LoginSection from './components/LoginSection.vue'; // 로그인 컴포넌트\nimport ShotSelector from './components/ShotSelector.vue'; // 샷 선택 컴포넌트\nimport VersionTable from './components/VersionTable.vue'; // 버전 테이블 컴포넌트\n\n\nexport default {\n  components: {\n    LoginSection,\n    ShotSelector,\n    VersionTable,\n  },\n  setup() {\n    const auth = useAuth();\n    const shotGridData = useShotGridData();\n    const notes = useNotes(auth.loggedInUserId);\n\n    // App.vue의 onMounted 로직\n    onMounted(async () => {\n      const storedUser = sessionStorage.getItem('loggedInUser');\n      if (storedUser) {\n        const user = JSON.parse(storedUser);\n        auth.loggedInUser.value = user.name; // useAuth의 loggedInUser 업데이트\n        auth.loggedInUserId.value = user.id; // useAuth의 loggedInUserId 업데이트\n      }\n      await shotGridData.loadProjects();\n    });\n\n    // loadVersions 함수는 App.vue에서 직접 관리 (ShotGridData와 Notes를 연결)\n    const loadVersions = async () => {\n      try {\n        const selectedShot = shotGridData.shots.value.find(s => s.code === shotGridData.selectedShotName.value);\n        if (!selectedShot) return;\n\n        const versionData = await fetchVersionsForShot(selectedShot.id);\n        const loadedVersions = versionData.versions || [];\n\n        // useNotes의 loadVersionNotes 함수를 호출하여 노트 데이터 로딩\n        await notes.loadVersionNotes(loadedVersions);\n\n        // 모든 데이터가 준비되면 버전 목록 업데이트 (UI 렌더링 유발)\n        shotGridData.setVersions(loadedVersions);\n\n      } catch (error) {\n        console.error(\"Error loading versions and notes:\", error);\n        // 사용자에게 에러를 알리는 로직을 추가할 수 있습니다.\n      }\n    };\n\n    // Clear 함수 (App.vue에서 직접 관리)\n    const clear = () => { // useShotGridData의 clear 로직을 호출\n      shotGridData.projectName.value = '';\n      shotGridData.shots.value = [];\n      shotGridData.versions.value = [];\n      shotGridData.selectedShotName.value = '';\n      auth.loginError.value = null;\n      notes.notesContent.value = {}; // 노트 내용도 초기화\n    };\n\n    return {\n      // useAuth에서 노출된 속성/함수\n      username: auth.username,\n      password: auth.password,\n      loggedInUser: auth.loggedInUser,\n      loginError: auth.loginError,\n      login: auth.login,\n\n      // useShotGridData에서 노출된 속성/함수\n      projectName: shotGridData.projectName,\n      projects: shotGridData.projects,\n      shots: shotGridData.shots,\n      selectedShotName: shotGridData.selectedShotName,\n      versions: shotGridData.versions,\n      onProjectSelected: shotGridData.onProjectSelected,\n\n      // useNotes에서 노출된 속성/함수\n      notesContent: notes.notesContent, // notesContent ref 자체를 전달\n      isSaving: notes.isSaving, // isSaving 상태 노출\n      saveNote: async (versionId, content) => { // saveNote 함수를 App.vue에서 래핑\n        const savedContent = await notes.saveNote(versionId, content);\n        if (savedContent !== null) { // 저장 성공 시에만 업데이트\n          notes.notesContent.value[versionId] = savedContent;\n        }\n      },\n\n      // App.vue에서 직접 관리하는 속성/함수\n      loadVersions,\n      clear,\n    };\n  },\n};\n</script>\n\n<style src=\"./assets/styles.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}