{"ast":null,"code":"import \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.timers.js\";\n// Composables\nimport { useToggleScope } from \"./toggleScope.js\"; // Utilities\nimport { inject, onScopeDispose, provide, reactive, readonly, shallowRef, toRaw, toRef, toValue, watchEffect } from 'vue';\nimport { getCurrentInstance } from \"../util/index.js\"; // Types\nvar StackSymbol = Symbol[\"for\"]('vuetify:stack');\nvar globalStack = reactive([]);\nexport function useStack(isActive, zIndex, disableGlobalStack) {\n  var vm = getCurrentInstance('useStack');\n  var createStackEntry = !disableGlobalStack;\n  var parent = inject(StackSymbol, undefined);\n  var stack = reactive({\n    activeChildren: new Set()\n  });\n  provide(StackSymbol, stack);\n  var _zIndex = shallowRef(Number(toValue(zIndex)));\n  useToggleScope(isActive, function () {\n    var _globalStack$at;\n    var lastZIndex = (_globalStack$at = globalStack.at(-1)) === null || _globalStack$at === void 0 ? void 0 : _globalStack$at[1];\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : Number(toValue(zIndex));\n    if (createStackEntry) {\n      globalStack.push([vm.uid, _zIndex.value]);\n    }\n    parent === null || parent === void 0 || parent.activeChildren.add(vm.uid);\n    onScopeDispose(function () {\n      if (createStackEntry) {\n        var idx = toRaw(globalStack).findIndex(function (v) {\n          return v[0] === vm.uid;\n        });\n        globalStack.splice(idx, 1);\n      }\n      parent === null || parent === void 0 || parent.activeChildren[\"delete\"](vm.uid);\n    });\n  });\n  var globalTop = shallowRef(true);\n  if (createStackEntry) {\n    watchEffect(function () {\n      var _globalStack$at2;\n      var _isTop = ((_globalStack$at2 = globalStack.at(-1)) === null || _globalStack$at2 === void 0 ? void 0 : _globalStack$at2[0]) === vm.uid;\n      setTimeout(function () {\n        return globalTop.value = _isTop;\n      });\n    });\n  }\n  var localTop = toRef(function () {\n    return !stack.activeChildren.size;\n  });\n  return {\n    globalTop: readonly(globalTop),\n    localTop: localTop,\n    stackStyles: toRef(function () {\n      return {\n        zIndex: _zIndex.value\n      };\n    })\n  };\n}","map":{"version":3,"names":["useToggleScope","inject","onScopeDispose","provide","reactive","readonly","shallowRef","toRaw","toRef","toValue","watchEffect","getCurrentInstance","StackSymbol","Symbol","globalStack","useStack","isActive","zIndex","disableGlobalStack","vm","createStackEntry","parent","undefined","stack","activeChildren","Set","_zIndex","Number","_globalStack$at","lastZIndex","at","value","push","uid","add","idx","findIndex","v","splice","globalTop","_globalStack$at2","_isTop","setTimeout","localTop","size","stackStyles"],"sources":["../../src/composables/stack.ts"],"sourcesContent":["// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport {\n  inject,\n  onScopeDispose,\n  provide,\n  reactive,\n  readonly,\n  shallowRef,\n  toRaw,\n  toRef,\n  toValue,\n  watchEffect,\n} from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { InjectionKey, MaybeRefOrGetter, Ref } from 'vue'\n\nconst StackSymbol: InjectionKey<StackProvide> = Symbol.for('vuetify:stack')\n\ninterface StackProvide {\n  activeChildren: Set<number>\n}\n\nconst globalStack = reactive<[uid: number, zIndex: number][]>([])\n\nexport function useStack (\n  isActive: Readonly<Ref<boolean>>,\n  zIndex: MaybeRefOrGetter<string | number>,\n  disableGlobalStack: boolean\n) {\n  const vm = getCurrentInstance('useStack')\n  const createStackEntry = !disableGlobalStack\n\n  const parent = inject(StackSymbol, undefined)\n  const stack: StackProvide = reactive({\n    activeChildren: new Set<number>(),\n  })\n  provide(StackSymbol, stack)\n\n  const _zIndex = shallowRef(Number(toValue(zIndex)))\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1]\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : Number(toValue(zIndex))\n\n    if (createStackEntry) {\n      globalStack.push([vm.uid, _zIndex.value])\n    }\n\n    parent?.activeChildren.add(vm.uid)\n\n    onScopeDispose(() => {\n      if (createStackEntry) {\n        const idx = toRaw(globalStack).findIndex(v => v[0] === vm.uid)\n        globalStack.splice(idx, 1)\n      }\n\n      parent?.activeChildren.delete(vm.uid)\n    })\n  })\n\n  const globalTop = shallowRef(true)\n  if (createStackEntry) {\n    watchEffect(() => {\n      const _isTop = globalStack.at(-1)?.[0] === vm.uid\n      setTimeout(() => globalTop.value = _isTop)\n    })\n  }\n\n  const localTop = toRef(() => !stack.activeChildren.size)\n\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: toRef(() => ({ zIndex: _zIndex.value })),\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}