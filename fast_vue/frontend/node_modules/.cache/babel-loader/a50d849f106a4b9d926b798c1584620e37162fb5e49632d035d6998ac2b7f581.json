{"ast":null,"code":"import _toConsumableArray from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n// Utilities\nimport { computed, inject, toRef } from 'vue';\n\n// Types\n\nexport function createRules(options, locale) {\n  var t = locale.t;\n  var aliases = _objectSpread({\n    required: function required(err) {\n      return function (v) {\n        // If the modifier .number is used, the 0 will be a number and it's a falsy value so we need to check for it\n        return v === 0 || !!v || t(err || '$vuetify.rules.required');\n      };\n    },\n    email: function email(err) {\n      return function (v) {\n        return !v || typeof v === 'string' && /^.+@\\S+\\.\\S+$/.test(v) || t(err || '$vuetify.rules.email');\n      };\n    },\n    number: function number(err) {\n      return function (v) {\n        return !!Number(v) || t(err || '$vuetify.rules.number');\n      };\n    },\n    integer: function integer(err) {\n      return function (v) {\n        return /^[\\d]*$/.test(v) || t(err || '$vuetify.rules.integer');\n      };\n    },\n    capital: function capital(err) {\n      return function (v) {\n        return /^[A-Z]*$/.test(v) || t(err || '$vuetify.rules.capital');\n      };\n    },\n    maxLength: function maxLength(len, err) {\n      return function (v) {\n        return !v || v.length <= len || t(err || '$vuetify.rules.maxLength', [len]);\n      };\n    },\n    minLength: function minLength(len, err) {\n      return function (v) {\n        return !v || v.length >= len || t(err || '$vuetify.rules.minLength', [len]);\n      };\n    },\n    strictLength: function strictLength(len, err) {\n      return function (v) {\n        return !v || v.length === len || t(err || '$vuetify.rules.strictLength', [len]);\n      };\n    },\n    exclude: function exclude(forbiddenCharacters, err) {\n      return function (v) {\n        var error = true;\n        var _iterator = _createForOfIteratorHelper(forbiddenCharacters),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var character = _step.value;\n            if (v.includes(character)) error = err || t('$vuetify.rules.exclude', character);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return error;\n      };\n    },\n    notEmpty: function notEmpty(err) {\n      return function (v) {\n        return v && v.length > 0 || t(err || '$vuetify.rules.notEmpty');\n      };\n    },\n    pattern: function pattern(_pattern, err) {\n      return function (v) {\n        return !v || _pattern.test(v) || t(err || '$vuetify.rules.pattern');\n      };\n    }\n  }, options === null || options === void 0 ? void 0 : options.aliases);\n  function resolveRules(fn) {\n    return computed(function () {\n      return fn().map(function (rule) {\n        var ruleName = null;\n        var ruleParams = [undefined];\n        if (Array.isArray(rule)) {\n          ruleName = rule[0];\n          ruleParams = rule.slice(1);\n        } else if (typeof rule === 'string') {\n          ruleName = rule;\n        }\n        if (ruleName !== null) {\n          var _aliases$ruleName;\n          if (ruleName.startsWith('$')) {\n            ruleName = ruleName.slice(1);\n          }\n          return (_aliases$ruleName = aliases[ruleName]) === null || _aliases$ruleName === void 0 ? void 0 : _aliases$ruleName.call.apply(_aliases$ruleName, [aliases].concat(_toConsumableArray(ruleParams)));\n        } else {\n          return rule;\n        }\n      });\n    });\n  }\n  return resolveRules;\n}\nexport var RulesSymbol = Symbol[\"for\"]('vuetify:rules');\nexport function useRules(fn) {\n  var resolveRules = inject(RulesSymbol, null);\n  if (!resolveRules) return toRef(fn);\n  return resolveRules(fn);\n}","map":{"version":3,"names":["computed","inject","toRef","createRules","options","locale","t","aliases","_objectSpread","required","err","v","email","test","number","Number","integer","capital","maxLength","len","length","minLength","strictLength","exclude","forbiddenCharacters","error","_iterator","_createForOfIteratorHelper","_step","s","n","done","character","value","includes","e","f","notEmpty","pattern","resolveRules","fn","map","rule","ruleName","ruleParams","undefined","Array","isArray","slice","_aliases$ruleName","startsWith","call","apply","concat","_toConsumableArray","RulesSymbol","Symbol","useRules"],"sources":["../../../src/labs/rules/rules.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, toRef } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\nimport type { LocaleInstance } from '@/composables/locale'\nimport type { ValidationProps, ValidationRule } from '@/composables/validation'\n\nexport type ValidationRuleBuilderWithoutOptions = (err?: string) => ValidationRule\nexport type ValidationRuleBuilderWithOptions<T> = (options: T, err?: string) => ValidationRule\nexport type ValidationRuleBuilder =\n  | ValidationRuleBuilderWithoutOptions\n  | ValidationRuleBuilderWithOptions<any>\n\nexport interface RuleAliases {\n  [name: string]: ValidationRuleBuilder\n  required: ValidationRuleBuilderWithoutOptions\n  email: ValidationRuleBuilderWithoutOptions\n  number: ValidationRuleBuilderWithoutOptions\n  integer: ValidationRuleBuilderWithoutOptions\n  capital: ValidationRuleBuilderWithoutOptions\n  maxLength: ValidationRuleBuilderWithOptions<number>\n  minLength: ValidationRuleBuilderWithOptions<number>\n  strictLength: ValidationRuleBuilderWithOptions<number>\n  exclude: ValidationRuleBuilderWithOptions<string[]>\n  notEmpty: ValidationRuleBuilderWithoutOptions\n  pattern: ValidationRuleBuilderWithOptions<RegExp>\n}\n\nexport type RulesOptions = {\n  aliases?: Partial<RuleAliases>\n}\n\ntype ValidationRuleParams = [any, string?]\nexport type ValidationAlias = string | [string, ...ValidationRuleParams]\n\nexport type RulesInstance = (fn: () => ValidationProps['rules']) => Readonly<Ref<any[]>>\n\nexport function createRules (options: RulesOptions | undefined, locale: LocaleInstance) {\n  const { t } = locale\n\n  const aliases: RuleAliases = {\n    required: (err?: string) => {\n      return (v: any) => {\n        // If the modifier .number is used, the 0 will be a number and it's a falsy value so we need to check for it\n        return v === 0 || !!v || t(err || '$vuetify.rules.required')\n      }\n    },\n    email: (err?: string) => {\n      return (v: any) => (!v || (typeof v === 'string' && /^.+@\\S+\\.\\S+$/.test(v))) || t(err || '$vuetify.rules.email')\n    },\n    number: (err?: string) => {\n      return (v: string) => !!Number(v) || t(err || '$vuetify.rules.number')\n    },\n    integer: (err?: string) => {\n      return (v: string) => (/^[\\d]*$/.test(v)) || t(err || '$vuetify.rules.integer')\n    },\n    capital: (err?: string) => {\n      return (v: string) => (/^[A-Z]*$/.test(v)) || t(err || '$vuetify.rules.capital')\n    },\n    maxLength: (len: number, err?: string) => {\n      return (v: any) => (!v || v.length <= len) || t(err || '$vuetify.rules.maxLength', [len])\n    },\n    minLength: (len: number, err?: string) => {\n      return (v: any) => (!v || v.length >= len) || t(err || '$vuetify.rules.minLength', [len])\n    },\n    strictLength: (len: number, err?: string) => {\n      return (v: any) => (!v || v.length === len) || t(err || '$vuetify.rules.strictLength', [len])\n    },\n    exclude: (forbiddenCharacters: string[], err?: string) => {\n      return (v: string) => {\n        let error: string | true = true\n        for (const character of forbiddenCharacters) {\n          if (v.includes(character)) error = err || t('$vuetify.rules.exclude', character)\n        }\n        return error\n      }\n    },\n    notEmpty: (err?: string) => {\n      return (v: any) => (v && v.length > 0) || t(err || '$vuetify.rules.notEmpty')\n    },\n    pattern: (pattern: RegExp, err?: string) => {\n      return (v: any) => (!v || pattern.test(v) || t(err || '$vuetify.rules.pattern'))\n    },\n\n    ...options?.aliases,\n  }\n\n  function resolveRules (fn: () => ValidationProps['rules']) {\n    return computed(() => fn().map(rule => {\n      let ruleName: string | null = null\n      let ruleParams: ValidationRuleParams = [undefined]\n      if (Array.isArray(rule)) {\n        ruleName = rule[0]\n        ruleParams = rule.slice(1) as ValidationRuleParams\n      } else if (typeof rule === 'string') {\n        ruleName = rule\n      }\n\n      if (ruleName !== null) {\n        if (ruleName.startsWith('$')) {\n          ruleName = ruleName.slice(1)\n        }\n\n        return aliases[ruleName]?.(...ruleParams)\n      } else {\n        return rule\n      }\n    }))\n  }\n\n  return resolveRules\n}\n\nexport const RulesSymbol: InjectionKey<RulesInstance> = Symbol.for('vuetify:rules')\n\nexport function useRules (fn: () => ValidationProps['rules']) {\n  const resolveRules = inject(RulesSymbol, null)\n\n  if (!resolveRules) return toRef(fn)\n\n  return resolveRules(fn)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}