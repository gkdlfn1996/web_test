{"ast":null,"code":"import _regenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { fetchShots, fetchProjects, fetchVersionsForShot } from './api';\nimport axios from 'axios'; // axios 임포트 추가\n\nexport default {\n  setup: function setup() {\n    var projectName = ref('');\n    var projects = ref([]);\n    var shots = ref([]); // 선택된 프로젝트의 샷 목록 (autocomplete items)\n    var versions = ref([]); // 버전 목록을 저장할 ref 추가\n    var username = ref(''); // 로그인 사용자 이름\n    var password = ref(''); // 로그인 비밀번호\n    var loggedInUser = ref(null); // 로그인 성공 시 사용자 이름 저장\n    var loginError = ref(null); // 로그인 에러 메시지\n    var selectedShotName = ref(''); // 선택된 샷 이름\n\n    // DB 테스트 관련 변수 추가\n    var dbTestResult = ref(null);\n    var dbTestError = ref(null);\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var projData;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            _context.n = 1;\n            return fetchProjects();\n          case 1:\n            projData = _context.v;\n            projects.value = projData.projects || [];\n          case 2:\n            return _context.a(2);\n        }\n      }, _callee);\n    })));\n\n    // 프로젝트 선택 시 해당 프로젝트의 샷 목록을 불러오는 함수\n    function onProjectSelected() {\n      return _onProjectSelected.apply(this, arguments);\n    } // 선택된 샷의 버전 목록을 불러오는 함수\n    function _onProjectSelected() {\n      _onProjectSelected = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var data;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              selectedShotName.value = ''; // 프로젝트 변경 시 샷 선택 초기화\n              versions.value = []; // 프로젝트 변경 시 버전 목록 초기화\n              if (!projectName.value) {\n                _context2.n = 2;\n                break;\n              }\n              _context2.n = 1;\n              return fetchShots(projectName.value);\n            case 1:\n              data = _context2.v;\n              shots.value = data.shots || [];\n              _context2.n = 3;\n              break;\n            case 2:\n              shots.value = [];\n            case 3:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }));\n      return _onProjectSelected.apply(this, arguments);\n    }\n    function loadVersions() {\n      return _loadVersions.apply(this, arguments);\n    }\n    function _loadVersions() {\n      _loadVersions = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var selectedShot, data;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              selectedShot = shots.value.find(function (s) {\n                return s.code === selectedShotName.value;\n              });\n              if (!selectedShot) {\n                _context3.n = 2;\n                break;\n              }\n              _context3.n = 1;\n              return fetchVersionsForShot(selectedShot.id);\n            case 1:\n              data = _context3.v;\n              versions.value = data.versions || [];\n            case 2:\n              return _context3.a(2);\n          }\n        }, _callee3);\n      }));\n      return _loadVersions.apply(this, arguments);\n    }\n    function clear() {\n      projectName.value = '';\n      shots.value = [];\n      versions.value = []; // 버전 목록도 초기화\n      selectedShotName.value = ''; // 선택된 샷 이름도 초기화\n      loggedInUser.value = null; // 로그인 정보 초기화\n      username.value = '';\n      password.value = '';\n      loginError.value = null;\n    }\n\n    // 로그인 메서드 추가\n    function login() {\n      return _login.apply(this, arguments);\n    } // DB 연결 테스트 메서드 추가\n    function _login() {\n      _login = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var response, _t;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              loginError.value = null; // 에러 메시지 초기화\n              _context4.p = 1;\n              _context4.n = 2;\n              return axios.post('http://localhost:8001/api/auth/login', {\n                username: username.value,\n                password: password.value\n              });\n            case 2:\n              response = _context4.v;\n              if (response.data.user) {\n                loggedInUser.value = response.data.user.name; // 사용자 이름 저장\n              }\n              _context4.n = 4;\n              break;\n            case 3:\n              _context4.p = 3;\n              _t = _context4.v;\n              console.error('로그인 실패:', _t);\n              loginError.value = '아이디 또는 비밀번호를 다시 확인해주세요.';\n              loggedInUser.value = null;\n            case 4:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 3]]);\n      }));\n      return _login.apply(this, arguments);\n    }\n    function testDbConnection() {\n      return _testDbConnection.apply(this, arguments);\n    } // v-data-table을 위한 헤더 정의\n    function _testDbConnection() {\n      _testDbConnection = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var response, _t2;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              dbTestResult.value = null;\n              dbTestError.value = null;\n              _context5.p = 1;\n              _context5.n = 2;\n              return axios.get('http://localhost:8001/db-test');\n            case 2:\n              response = _context5.v;\n              dbTestResult.value = response.data.message;\n              _context5.n = 4;\n              break;\n            case 3:\n              _context5.p = 3;\n              _t2 = _context5.v;\n              console.error('DB 연결 테스트 중 에러 발생:', _t2);\n              dbTestError.value = _t2.message;\n              if (_t2.response && _t2.response.data && _t2.response.data.message) {\n                dbTestError.value = _t2.response.data.message;\n              }\n            case 4:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[1, 3]]);\n      }));\n      return _testDbConnection.apply(this, arguments);\n    }\n    var versionHeaders = [{\n      title: '버전 이름',\n      key: 'code',\n      sortable: false\n    }, {\n      title: '노트',\n      key: 'note',\n      sortable: false\n    }];\n    return {\n      projectName: projectName,\n      projects: projects,\n      shots: shots,\n      selectedShotName: selectedShotName,\n      // 반환 객체에 추가\n      username: username,\n      // 반환 객체에 추가\n      password: password,\n      // 반환 객체에 추가\n      loggedInUser: loggedInUser,\n      // 반환 객체에 추가\n      loginError: loginError,\n      // 반환 객체에 추가\n      versions: versions,\n      // 반환 객체에 추가\n      onProjectSelected: onProjectSelected,\n      // 반환 객체에 추가\n      loadVersions: loadVersions,\n      // 반환 객체에 추가\n      clear: clear,\n      versionHeaders: versionHeaders,\n      // 반환 객체에 추가\n      dbTestResult: dbTestResult,\n      // 반환 객체에 추가\n      dbTestError: dbTestError,\n      // 반환 객체에 추가\n      testDbConnection: testDbConnection,\n      // 반환 객체에 추가\n      login: login // 반환 객체에 추가\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","fetchShots","fetchProjects","fetchVersionsForShot","axios","setup","projectName","projects","shots","versions","username","password","loggedInUser","loginError","selectedShotName","dbTestResult","dbTestError","_asyncToGenerator","_regenerator","m","_callee","projData","w","_context","n","v","value","a","onProjectSelected","_onProjectSelected","apply","arguments","_callee2","data","_context2","loadVersions","_loadVersions","_callee3","selectedShot","_context3","find","s","code","id","clear","login","_login","_callee4","response","_t","_context4","p","post","user","name","console","error","testDbConnection","_testDbConnection","_callee5","_t2","_context5","get","message","versionHeaders","title","key","sortable"],"sources":["/home/idea/td_test/LAZYPIC/PONO/web_test/fast_vue/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <!-- 로그인 섹션 -->\n      <v-container class=\"login-section\">\n        <v-card class=\"pa-5\" elevation=\"2\" v-if=\"!loggedInUser\">\n          <v-card-title class=\"text-h5\">로그인</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"username\"\n              label=\"ShotGrid ID\"\n              required\n            ></v-text-field>\n            <v-text-field\n              v-model=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              required\n            ></v-text-field>\n            <v-alert\n              v-if=\"loginError\"\n              type=\"error\"\n              dense\n              text\n              class=\"mb-3\"\n            >{{ loginError }}</v-alert>\n            <v-btn color=\"primary\" @click=\"login\">로그인</v-btn>\n          </v-card-text>\n        </v-card>\n        <v-alert v-else type=\"success\" dense text class=\"mb-5\">\n          환영합니다, {{ loggedInUser }}님!\n        </v-alert>\n      </v-container>\n\n      <!-- 기존 UI 섹션 (로그인 섹션 아래로 이동) -->\n      <v-container :class=\"{'mt-5': loggedInUser}\">\n        <div class=\"d-flex align-center mb-4\">\n          <v-autocomplete\n            v-model=\"projectName\"\n            label=\"Project\"\n            :items=\"projects\"\n            @update:modelValue=\"onProjectSelected\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-autocomplete\n            v-model=\"selectedShotName\"\n            label=\"Shot\"\n            :items=\"shots.map(s => s.code)\"\n            :disabled=\"!shots.length\"\n            class=\"mr-4\"\n          ></v-autocomplete>\n          <v-btn @click=\"loadVersions\" :disabled=\"!selectedShotName\">OK</v-btn>\n          <v-btn @click=\"clear\" class=\"ml-4\">Clear</v-btn>\n        </div>\n\n        <!-- 버전 목록 테이블 -->\n        <div class=\"versions-section\" v-if=\"versions.length\">\n          <h2>버전 목록</h2>\n          <v-data-table\n            :headers=\"versionHeaders\"\n            :items=\"versions\"\n            item-key=\"id\"\n            class=\"elevation-1\"\n            hide-default-footer\n            disable-pagination\n          >\n            <template v-slot:item.note=\"{ item }\">\n              <div class=\"note-section\">\n                <div class=\"my-note\">\n                  <h3>나의 임시 노트 ({{ item.code }})</h3>\n                  <v-textarea\n                    label=\"여기에 노트를 작성하세요\"\n                    rows=\"3\"\n                    variant=\"outlined\"\n                  ></v-textarea>\n                </div>\n                <div class=\"other-notes\">\n                  <h3>다른 사람의 임시 노트</h3>\n                  <p>다른 사람의 노트 내용이 여기에 실시간으로 표시됩니다.</p>\n                </div>\n              </div>\n            </template>\n          </v-data-table>\n        </div>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { fetchShots, fetchProjects, fetchVersionsForShot } from './api'\nimport axios from 'axios'; // axios 임포트 추가\n\nexport default {\n  setup() {\n    const projectName = ref('')\n    const projects = ref([])\n    const shots = ref([]) // 선택된 프로젝트의 샷 목록 (autocomplete items)\n    const versions = ref([]) // 버전 목록을 저장할 ref 추가\n    const username = ref('') // 로그인 사용자 이름\n    const password = ref('') // 로그인 비밀번호\n    const loggedInUser = ref(null) // 로그인 성공 시 사용자 이름 저장\n    const loginError = ref(null) // 로그인 에러 메시지\n    const selectedShotName = ref('') // 선택된 샷 이름\n\n    // DB 테스트 관련 변수 추가\n    const dbTestResult = ref(null);\n    const dbTestError = ref(null);\n\n  onMounted(\n      async () => {\n        const projData = await fetchProjects()\n        projects.value = projData.projects || []\n    })\n\n    // 프로젝트 선택 시 해당 프로젝트의 샷 목록을 불러오는 함수\n    async function onProjectSelected() {\n      selectedShotName.value = ''; // 프로젝트 변경 시 샷 선택 초기화\n      versions.value = []; // 프로젝트 변경 시 버전 목록 초기화\n      if (projectName.value) {\n        const data = await fetchShots(projectName.value);\n        shots.value = data.shots || [];\n      } else {\n        shots.value = [];\n      }\n    }\n\n    // 선택된 샷의 버전 목록을 불러오는 함수\n    async function loadVersions() {\n      const selectedShot = shots.value.find(s => s.code === selectedShotName.value);\n      if (selectedShot) {\n        const data = await fetchVersionsForShot(selectedShot.id);\n        versions.value = data.versions || [];\n      }\n    }\n\n    function clear() {\n      projectName.value = ''\n      shots.value = []\n      versions.value = [] // 버전 목록도 초기화\n      selectedShotName.value = '' // 선택된 샷 이름도 초기화\n      loggedInUser.value = null; // 로그인 정보 초기화\n      username.value = '';\n      password.value = '';\n      loginError.value = null;\n    }\n\n    // 로그인 메서드 추가\n    async function login() {\n      loginError.value = null; // 에러 메시지 초기화\n      try {\n        const response = await axios.post('http://localhost:8001/api/auth/login', {\n          username: username.value,\n          password: password.value,\n        });\n        if (response.data.user) {\n          loggedInUser.value = response.data.user.name; // 사용자 이름 저장\n        }\n      } catch (error) {\n        console.error('로그인 실패:', error);\n        loginError.value = '아이디 또는 비밀번호를 다시 확인해주세요.';\n        loggedInUser.value = null;\n      }\n    }\n\n    // DB 연결 테스트 메서드 추가\n    async function testDbConnection() {\n      dbTestResult.value = null;\n      dbTestError.value = null;\n      try {\n        const response = await axios.get('http://localhost:8001/db-test');\n        dbTestResult.value = response.data.message;\n      } catch (error) {\n        console.error('DB 연결 테스트 중 에러 발생:', error);\n        dbTestError.value = error.message;\n        if (error.response && error.response.data && error.response.data.message) {\n          dbTestError.value = error.response.data.message;\n        }\n      }\n    }\n\n    // v-data-table을 위한 헤더 정의\n    const versionHeaders = [\n      { title: '버전 이름', key: 'code', sortable: false },\n      { title: '노트', key: 'note', sortable: false },\n    ];\n\n    return {\n      projectName,\n      projects,\n      shots,\n      selectedShotName, // 반환 객체에 추가\n      username, // 반환 객체에 추가\n      password, // 반환 객체에 추가\n      loggedInUser, // 반환 객체에 추가\n      loginError, // 반환 객체에 추가\n      versions, // 반환 객체에 추가\n      onProjectSelected, // 반환 객체에 추가\n      loadVersions, // 반환 객체에 추가\n      clear,\n      versionHeaders, // 반환 객체에 추가\n      dbTestResult, // 반환 객체에 추가\n      dbTestError,  // 반환 객체에 추가\n      testDbConnection, // 반환 객체에 추가\n      login // 반환 객체에 추가\n    }}}\n    \n</script>\n\n<style src=\"./assets/styles.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}